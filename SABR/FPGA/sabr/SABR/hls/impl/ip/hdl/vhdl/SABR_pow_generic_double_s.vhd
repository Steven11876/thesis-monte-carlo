-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SABR_pow_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    base_r : IN STD_LOGIC_VECTOR (63 downto 0);
    exp : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of SABR_pow_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv90_58B90BFBE8E7BCD5E4F1 : STD_LOGIC_VECTOR (89 downto 0) := "000000000001011000101110010000101111111011111010001110011110111100110101011110010011110001";
    constant ap_const_lv71_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (70 downto 0) := "10110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv44_0 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000010";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_C02 : STD_LOGIC_VECTOR (11 downto 0) := "110000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv45_0 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000000";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv12_33 : STD_LOGIC_VECTOR (11 downto 0) := "000000110011";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv52_FFFFFFFFFFFFF : STD_LOGIC_VECTOR (51 downto 0) := "1111111111111111111111111111111111111111111111111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_35 : STD_LOGIC_VECTOR (11 downto 0) := "000000110101";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv58_10 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv63_3FF0000000000000 : STD_LOGIC_VECTOR (62 downto 0) := "011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_7FF0000000000000 : STD_LOGIC_VECTOR (62 downto 0) := "111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log0_lut_table_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log0_lut_table_array_q0 : STD_LOGIC_VECTOR (108 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_q0 : STD_LOGIC_VECTOR (104 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_q0 : STD_LOGIC_VECTOR (101 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_q0 : STD_LOGIC_VECTOR (96 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_q0 : STD_LOGIC_VECTOR (91 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_q0 : STD_LOGIC_VECTOR (86 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_q0 : STD_LOGIC_VECTOR (81 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_q0 : STD_LOGIC_VECTOR (76 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal exp_read_reg_2960 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exp_read_reg_2960_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_read_reg_2960_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_read_reg_2960_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_read_reg_2960_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_read_reg_2960_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_read_reg_2960_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_read_reg_2960_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_read_reg_2960_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_read_reg_2960_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bs_exp_reg_2965 : STD_LOGIC_VECTOR (10 downto 0);
    signal bs_exp_reg_2965_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bs_exp_reg_2965_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bs_exp_reg_2965_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bs_exp_reg_2965_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bs_exp_reg_2965_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bs_exp_reg_2965_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bs_exp_reg_2965_pp0_iter7_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bs_exp_reg_2965_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal bs_sig_fu_674_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal bs_sig_reg_2972 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_reg_2980 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2980_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2980_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2980_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2980_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2980_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2980_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2980_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2980_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2980_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2987 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2987_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2987_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2987_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2987_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2987_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2987_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2987_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2987_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln502_fu_704_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln502_reg_2993 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln502_reg_2993_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln502_reg_2993_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln502_reg_2993_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln502_reg_2993_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln502_reg_2993_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln502_reg_2993_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln502_reg_2993_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln340_1_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln340_1_reg_3003 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln340_1_reg_3003_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln340_1_reg_3003_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln340_1_reg_3003_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln340_1_reg_3003_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln340_1_reg_3003_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln340_1_reg_3003_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln340_1_reg_3003_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln340_1_reg_3003_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_reg_3009 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_reg_3009_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_reg_3009_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_reg_3009_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_reg_3009_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_reg_3009_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_reg_3009_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_reg_3009_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_reg_3009_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln516_fu_630_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal mul_ln516_reg_3014 : STD_LOGIC_VECTOR (53 downto 0);
    signal a_reg_3020 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_3020_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_3020_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_3020_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_3020_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_3020_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_reg_3020_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln39_fu_762_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal trunc_ln39_reg_3026 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_6_reg_3031 : STD_LOGIC_VECTOR (0 downto 0);
    signal z2_reg_3036 : STD_LOGIC_VECTOR (72 downto 0);
    signal a_1_reg_3042 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_3042_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_3042_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_3042_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_3042_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_1_reg_3042_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_reg_3048 : STD_LOGIC_VECTOR (66 downto 0);
    signal sub_ln44_1_fu_941_p2 : STD_LOGIC_VECTOR (81 downto 0);
    signal sub_ln44_1_reg_3053 : STD_LOGIC_VECTOR (81 downto 0);
    signal a_2_reg_3058 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_2_reg_3058_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_2_reg_3058_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_2_reg_3058_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_2_reg_3058_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln39_1_fu_957_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal trunc_ln39_1_reg_3064 : STD_LOGIC_VECTOR (75 downto 0);
    signal z4_reg_3069 : STD_LOGIC_VECTOR (91 downto 0);
    signal tmp_8_reg_3075 : STD_LOGIC_VECTOR (85 downto 0);
    signal tmp_9_reg_3080 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_reg_3080_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_reg_3080_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_reg_3080_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_reg_3086 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_11_reg_3092 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp_13_reg_3097 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_reg_3097_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_reg_3097_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_reg_3103 : STD_LOGIC_VECTOR (81 downto 0);
    signal tmp_15_reg_3109 : STD_LOGIC_VECTOR (75 downto 0);
    signal tmp_16_reg_3114 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_16_reg_3114_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_reg_3120 : STD_LOGIC_VECTOR (76 downto 0);
    signal tmp_18_reg_3126 : STD_LOGIC_VECTOR (70 downto 0);
    signal tmp_19_reg_3131 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_20_reg_3177 : STD_LOGIC_VECTOR (71 downto 0);
    signal tmp_21_reg_3182 : STD_LOGIC_VECTOR (39 downto 0);
    signal x_is_1_fu_1443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_1_reg_3187 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_3_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_3_reg_3193 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_fu_1453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_0_reg_3199 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_3206 : STD_LOGIC_VECTOR (0 downto 0);
    signal log_base_reg_3213 : STD_LOGIC_VECTOR (77 downto 0);
    signal es_exp_fu_1661_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal es_exp_reg_3218 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_exp_fu_1677_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_exp_reg_3223 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_is_n1_fu_1699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_reg_3233 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_reg_3233_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_reg_3233_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_reg_3233_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_reg_3233_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_reg_3233_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_reg_3233_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_reg_3233_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_n1_reg_3233_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_neg_fu_1752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_neg_reg_3239 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_1763_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_3244 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_1_fu_1861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_1_reg_3252 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_1_reg_3252_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_1_reg_3252_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_1_reg_3252_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_1_reg_3252_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_1_reg_3252_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_1_reg_3252_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_1_reg_3252_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_1_reg_3252_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_2_fu_1891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_2_reg_3259 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_2_reg_3259_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_2_reg_3259_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_2_reg_3259_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_2_reg_3259_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_2_reg_3259_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_2_reg_3259_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_2_reg_3259_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_2_reg_3259_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_odd_fu_1930_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_odd_reg_3265 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_2_fu_1972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_2_reg_3270 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_2_reg_3270_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_2_reg_3270_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_2_reg_3270_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_2_reg_3270_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_2_reg_3270_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_2_reg_3270_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_2_reg_3270_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_2_reg_3270_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_2_fu_2012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_2_reg_3276 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_2_reg_3276_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_2_reg_3276_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_2_reg_3276_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_2_reg_3276_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_2_reg_3276_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_2_reg_3276_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_2_reg_3276_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_2_reg_3276_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal m_frac_l_fu_642_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal m_frac_l_reg_3282 : STD_LOGIC_VECTOR (130 downto 0);
    signal tmp_30_reg_3292 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_3292_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_3292_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_3292_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_3292_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_3292_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_3292_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_3292_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_3292_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln422_fu_2066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln422_reg_3298 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln422_reg_3298_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln422_reg_3298_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln422_reg_3298_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln422_reg_3298_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln422_reg_3298_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln422_reg_3298_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln422_reg_3298_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_fu_2121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_reg_3303 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_reg_3303_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_reg_3303_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_reg_3303_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_reg_3303_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_reg_3303_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_reg_3303_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_reg_3303_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fix_reg_3311 : STD_LOGIC_VECTOR (58 downto 0);
    signal m_fix_reg_3311_pp0_iter12_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal m_fix_reg_3311_pp0_iter13_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal m_fix_reg_3311_pp0_iter14_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_23_reg_3316 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_3316_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_fu_2301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_3326 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_3326_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_3326_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_3326_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_3326_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_3326_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_3326_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_3326_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_fu_2356_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_3336 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_3336_pp0_iter15_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_3336_pp0_iter16_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_reg_3336_pp0_iter17_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal m_diff_hi_reg_3343 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_reg_3343_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_3348 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_reg_3348_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_fu_2403_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_reg_3355 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_fu_2413_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_reg_3360 : STD_LOGIC_VECTOR (34 downto 0);
    signal exp_Z3_m_1_fu_2460_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal exp_Z3_m_1_reg_3375 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln261_fu_2493_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln261_reg_3380 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z1P_m_1_reg_3395 : STD_LOGIC_VECTOR (49 downto 0);
    signal icmp_ln628_1_fu_2676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_1_reg_3400 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln645_fu_2682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln645_reg_3405 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_sig_fu_2708_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal out_sig_reg_3410 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln657_fu_2716_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln657_reg_3415 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln46_fu_1322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln46_1_fu_1326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln46_2_fu_1330_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln46_3_fu_1334_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln46_4_fu_1338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln46_5_fu_1342_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln46_6_fu_1404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln249_fu_2427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln254_fu_2432_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln273_fu_2499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln611_fu_2503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log0_lut_table_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_ce1_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local : STD_LOGIC;
    signal Elog2_fu_604_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal mul_ln522_fu_614_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal zext_ln522_fu_1566_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal mul_ln522_fu_614_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln258_fu_618_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal mul_ln258_fu_618_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln277_fu_622_p0 : STD_LOGIC_VECTOR (48 downto 0);
    signal mul_ln277_fu_622_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln616_fu_626_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal mul_ln616_fu_626_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal mul_ln516_fu_630_p0 : STD_LOGIC_VECTOR (53 downto 0);
    signal mul_ln516_fu_630_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln44_1_fu_634_p0 : STD_LOGIC_VECTOR (72 downto 0);
    signal mul_ln44_1_fu_634_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln44_6_fu_638_p0 : STD_LOGIC_VECTOR (76 downto 0);
    signal mul_ln44_6_fu_638_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln44_5_fu_646_p0 : STD_LOGIC_VECTOR (81 downto 0);
    signal mul_ln44_5_fu_646_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln44_2_fu_650_p0 : STD_LOGIC_VECTOR (82 downto 0);
    signal mul_ln44_2_fu_650_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln44_4_fu_654_p0 : STD_LOGIC_VECTOR (86 downto 0);
    signal mul_ln44_4_fu_654_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln44_3_fu_658_p0 : STD_LOGIC_VECTOR (91 downto 0);
    signal mul_ln44_3_fu_658_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_fu_662_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal index0_fu_694_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_frac_1_fu_728_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln485_fu_735_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal b_frac_fu_719_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_s_fu_781_p3 : STD_LOGIC_VECTOR (69 downto 0);
    signal zext_ln42_fu_788_p1 : STD_LOGIC_VECTOR (73 downto 0);
    signal z1_fu_774_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal zext_ln42_1_fu_800_p1 : STD_LOGIC_VECTOR (74 downto 0);
    signal zext_ln42_2_cast_fu_792_p3 : STD_LOGIC_VECTOR (74 downto 0);
    signal tmp_4_fu_804_p3 : STD_LOGIC_VECTOR (75 downto 0);
    signal zext_ln42_2_fu_812_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal shl_ln_fu_823_p3 : STD_LOGIC_VECTOR (74 downto 0);
    signal zext_ln44_fu_830_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal select_ln42_fu_816_p3 : STD_LOGIC_VECTOR (75 downto 0);
    signal mul_ln44_fu_843_p0 : STD_LOGIC_VECTOR (70 downto 0);
    signal mul_ln44_fu_843_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln44_fu_843_p2 : STD_LOGIC_VECTOR (74 downto 0);
    signal add_ln44_fu_834_p2 : STD_LOGIC_VECTOR (75 downto 0);
    signal zext_ln44_2_fu_849_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal sub_ln44_fu_853_p2 : STD_LOGIC_VECTOR (75 downto 0);
    signal zext_ln40_fu_889_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal shl_ln44_1_fu_900_p3 : STD_LOGIC_VECTOR (80 downto 0);
    signal eZ_fu_892_p3 : STD_LOGIC_VECTOR (80 downto 0);
    signal zext_ln44_3_fu_907_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal zext_ln44_4_fu_911_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal mul_ln44_1_fu_634_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal shl_ln44_2_fu_929_p3 : STD_LOGIC_VECTOR (79 downto 0);
    signal add_ln44_1_fu_915_p2 : STD_LOGIC_VECTOR (81 downto 0);
    signal zext_ln44_7_fu_937_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal z3_fu_961_p3 : STD_LOGIC_VECTOR (82 downto 0);
    signal zext_ln40_1_fu_968_p1 : STD_LOGIC_VECTOR (94 downto 0);
    signal shl_ln44_4_fu_980_p3 : STD_LOGIC_VECTOR (100 downto 0);
    signal eZ_1_fu_972_p3 : STD_LOGIC_VECTOR (95 downto 0);
    signal zext_ln44_8_fu_987_p1 : STD_LOGIC_VECTOR (101 downto 0);
    signal zext_ln44_9_fu_991_p1 : STD_LOGIC_VECTOR (101 downto 0);
    signal mul_ln44_2_fu_650_p2 : STD_LOGIC_VECTOR (88 downto 0);
    signal shl_ln44_5_fu_1010_p3 : STD_LOGIC_VECTOR (94 downto 0);
    signal add_ln44_2_fu_995_p2 : STD_LOGIC_VECTOR (101 downto 0);
    signal zext_ln44_12_fu_1018_p1 : STD_LOGIC_VECTOR (101 downto 0);
    signal sub_ln44_2_fu_1022_p2 : STD_LOGIC_VECTOR (101 downto 0);
    signal zext_ln40_2_fu_1058_p1 : STD_LOGIC_VECTOR (108 downto 0);
    signal shl_ln44_6_fu_1069_p3 : STD_LOGIC_VECTOR (119 downto 0);
    signal eZ_2_fu_1061_p3 : STD_LOGIC_VECTOR (109 downto 0);
    signal zext_ln44_13_fu_1076_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal zext_ln44_14_fu_1080_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal mul_ln44_3_fu_658_p2 : STD_LOGIC_VECTOR (96 downto 0);
    signal shl_ln44_7_fu_1098_p3 : STD_LOGIC_VECTOR (107 downto 0);
    signal add_ln44_3_fu_1084_p2 : STD_LOGIC_VECTOR (120 downto 0);
    signal zext_ln44_17_fu_1106_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal sub_ln44_3_fu_1110_p2 : STD_LOGIC_VECTOR (120 downto 0);
    signal zext_ln40_3_fu_1146_p1 : STD_LOGIC_VECTOR (108 downto 0);
    signal shl_ln44_8_fu_1157_p3 : STD_LOGIC_VECTOR (124 downto 0);
    signal eZ_3_fu_1149_p3 : STD_LOGIC_VECTOR (109 downto 0);
    signal zext_ln44_18_fu_1164_p1 : STD_LOGIC_VECTOR (125 downto 0);
    signal zext_ln44_19_fu_1168_p1 : STD_LOGIC_VECTOR (125 downto 0);
    signal mul_ln44_4_fu_654_p2 : STD_LOGIC_VECTOR (91 downto 0);
    signal shl_ln44_9_fu_1186_p3 : STD_LOGIC_VECTOR (107 downto 0);
    signal add_ln44_4_fu_1172_p2 : STD_LOGIC_VECTOR (125 downto 0);
    signal zext_ln44_22_fu_1194_p1 : STD_LOGIC_VECTOR (125 downto 0);
    signal sub_ln44_4_fu_1198_p2 : STD_LOGIC_VECTOR (125 downto 0);
    signal zext_ln40_4_fu_1234_p1 : STD_LOGIC_VECTOR (108 downto 0);
    signal shl_ln44_s_fu_1245_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal eZ_4_fu_1237_p3 : STD_LOGIC_VECTOR (109 downto 0);
    signal zext_ln44_23_fu_1252_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal zext_ln44_24_fu_1256_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal mul_ln44_5_fu_646_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal shl_ln44_3_fu_1274_p3 : STD_LOGIC_VECTOR (107 downto 0);
    signal add_ln44_5_fu_1260_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal zext_ln44_27_fu_1282_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal sub_ln44_5_fu_1286_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal zext_ln40_5_fu_1346_p1 : STD_LOGIC_VECTOR (108 downto 0);
    signal shl_ln44_10_fu_1357_p3 : STD_LOGIC_VECTOR (134 downto 0);
    signal eZ_5_fu_1349_p3 : STD_LOGIC_VECTOR (109 downto 0);
    signal zext_ln44_28_fu_1364_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal zext_ln44_29_fu_1368_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal mul_ln44_6_fu_638_p2 : STD_LOGIC_VECTOR (81 downto 0);
    signal shl_ln44_11_fu_1386_p3 : STD_LOGIC_VECTOR (107 downto 0);
    signal add_ln44_6_fu_1372_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal zext_ln44_32_fu_1394_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal sub_ln44_6_fu_1398_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal zext_ln486_fu_1428_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_fu_1431_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln340_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_exp_1_fu_1466_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal b_exp_2_fu_1472_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln194_fu_1484_p1 : STD_LOGIC_VECTOR (108 downto 0);
    signal zext_ln194_1_fu_1488_p1 : STD_LOGIC_VECTOR (102 downto 0);
    signal zext_ln194_2_fu_1492_p1 : STD_LOGIC_VECTOR (102 downto 0);
    signal add_ln209_1_fu_1518_p2 : STD_LOGIC_VECTOR (102 downto 0);
    signal zext_ln209_fu_1524_p1 : STD_LOGIC_VECTOR (108 downto 0);
    signal add_ln209_fu_1512_p2 : STD_LOGIC_VECTOR (108 downto 0);
    signal zext_ln194_3_fu_1496_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal zext_ln194_4_fu_1500_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal zext_ln194_5_fu_1504_p1 : STD_LOGIC_VECTOR (82 downto 0);
    signal zext_ln194_6_fu_1508_p1 : STD_LOGIC_VECTOR (82 downto 0);
    signal add_ln209_4_fu_1540_p2 : STD_LOGIC_VECTOR (82 downto 0);
    signal zext_ln209_1_fu_1546_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal add_ln209_3_fu_1534_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal add_ln209_5_fu_1550_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal zext_ln209_2_fu_1556_p1 : STD_LOGIC_VECTOR (108 downto 0);
    signal add_ln209_2_fu_1528_p2 : STD_LOGIC_VECTOR (108 downto 0);
    signal mul_ln522_fu_614_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal lshr_ln_fu_1571_p4 : STD_LOGIC_VECTOR (77 downto 0);
    signal shl_ln1_fu_1581_p3 : STD_LOGIC_VECTOR (116 downto 0);
    signal zext_ln522_1_fu_1588_p1 : STD_LOGIC_VECTOR (116 downto 0);
    signal sub_ln522_fu_1592_p2 : STD_LOGIC_VECTOR (116 downto 0);
    signal Elog2_fu_604_p2 : STD_LOGIC_VECTOR (89 downto 0);
    signal shl_ln2_fu_1608_p3 : STD_LOGIC_VECTOR (119 downto 0);
    signal log_sum_1_fu_1560_p2 : STD_LOGIC_VECTOR (108 downto 0);
    signal sext_ln525_fu_1616_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal sext_ln525_1_fu_1620_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal lshr_ln522_1_fu_1598_p4 : STD_LOGIC_VECTOR (71 downto 0);
    signal add_ln525_fu_1624_p2 : STD_LOGIC_VECTOR (120 downto 0);
    signal zext_ln525_fu_1630_p1 : STD_LOGIC_VECTOR (120 downto 0);
    signal add_ln525_1_fu_1634_p2 : STD_LOGIC_VECTOR (120 downto 0);
    signal data_1_fu_1650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln486_1_fu_1673_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal xor_ln341_fu_1689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sig_fu_1669_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln18_fu_1703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_fu_1709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_2_fu_1721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_inf_fu_1737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln357_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln357_fu_1746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal es_exp_cast_fu_1771_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln373_fu_1781_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln373_fu_1787_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal lshr_ln373_fu_1791_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal and_ln373_1_fu_1797_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln372_fu_1757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln373_fu_1809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln373_fu_1815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_int_fu_1829_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_int_fu_1829_p7 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_int_fu_1829_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_is_inf_fu_1715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_p1_fu_1694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln378_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_fu_1855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_fu_1683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_int_fu_1829_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_fu_1867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln386_fu_1873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_fu_1733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln386_fu_1879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_1_fu_1885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_NaN_fu_1727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_fu_1653_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_pos_fu_1897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln422_fu_1920_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal y_is_odd_fu_1930_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_is_pinf_fu_1903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_abs_greater_1_fu_1915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_ninf_fu_1909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln431_2_fu_1949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln431_fu_1938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_fu_1960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln431_3_fu_1955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_1_fu_1966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln431_1_fu_1944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln438_2_fu_1989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln438_1_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_fu_2000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln438_3_fu_1994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln438_1_fu_2006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln438_fu_1978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_frac_fu_2018_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln532_fu_2026_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_1_fu_2030_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_2_fu_2036_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln421_fu_2061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln422_1_fu_2071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln421_fu_2076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln422_fu_2082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln422_1_fu_2088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_odd_1_fu_2102_p7 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_odd_1_fu_2102_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_is_odd_1_fu_2102_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln545_fu_2126_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln545_fu_2131_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln545_fu_2135_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln545_1_fu_2141_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln545_fu_2145_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal ashr_ln545_fu_2149_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal shl_ln545_fu_2154_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal trunc_ln545_fu_2159_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal trunc_ln545_1_fu_2163_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal m_fix_l_fu_2167_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal zext_ln546_fu_2174_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal shl_ln546_fu_2178_p2 : STD_LOGIC_VECTOR (129 downto 0);
    signal ashr_ln546_fu_2184_p2 : STD_LOGIC_VECTOR (129 downto 0);
    signal sext_ln552_fu_2197_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln552_fu_2200_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal tmp_22_fu_2209_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln553_fu_2217_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln553_fu_2224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln553_fu_2228_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal shl_ln553_fu_2232_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal ashr_ln553_fu_2237_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal select_ln553_1_fu_2242_p3 : STD_LOGIC_VECTOR (130 downto 0);
    signal shl_ln552_fu_2204_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal m_fix_0_in_in_v_v_fu_2250_p3 : STD_LOGIC_VECTOR (130 downto 0);
    signal empty_fu_2257_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal zext_ln549_fu_2261_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal m_fix_hi_fu_2275_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal m_fix_back_fu_2190_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal sext_ln628_fu_2297_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal shl_ln3_fu_2306_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2949_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln563_fu_2333_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_cast_fu_2317_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln563_fu_2336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln563_1_fu_2342_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_24_fu_2326_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln563_fu_2348_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln568_fu_609_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_a_fu_2368_p4 : STD_LOGIC_VECTOR (58 downto 0);
    signal sub_ln574_fu_2378_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal Z4_ind_fu_2417_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_Z4_fu_2437_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln250_fu_2447_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln250_1_fu_2450_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z4_m_1_fu_2454_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln258_fu_618_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_25_fu_2479_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln261_1_fu_2489_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln261_fu_2510_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln255_fu_2507_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_26_fu_2519_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal exp_Z2_m_1_fu_2529_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal exp_Z2P_m_1_fu_2513_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal and_ln_fu_2548_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal mul_ln277_fu_622_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal tmp_27_fu_2563_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln280_2_fu_2573_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln280_fu_2577_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln280_1_fu_2583_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln280_fu_2559_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_fu_2587_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1_hi_fu_2603_p4 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln616_fu_2613_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal mul_ln616_fu_626_p2 : STD_LOGIC_VECTOR (98 downto 0);
    signal shl_ln4_fu_2628_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal zext_ln616_2_fu_2636_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal add_ln616_1_fu_2640_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal tmp_28_fu_2646_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_1_fu_2654_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_2_fu_2659_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_29_fu_2666_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_2688_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_12_fu_2698_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal t_fu_2720_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_1_fu_2741_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_2_fu_2752_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln628_fu_2763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_exp_fu_2772_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal t_3_fu_2777_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln386_3_fu_2789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln386_1_fu_2793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln386_2_fu_2804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln342_fu_2814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln342_1_fu_2819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln431_fu_2731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln431_5_fu_2830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln438_fu_2736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln438_5_fu_2841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln628_fu_2767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_1_fu_2847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln629_fu_2858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln628_fu_2869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln645_fu_2875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln342_fu_2799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln386_1_fu_2809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln431_4_fu_2825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln438_4_fu_2836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln629_fu_2853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln629_1_fu_2863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln645_1_fu_2880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_2_fu_2905_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln497_1_fu_2748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln497_2_fu_2759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal retval_2_fu_2905_p18 : STD_LOGIC_VECTOR (63 downto 0);
    signal retval_2_fu_2905_p19 : STD_LOGIC_VECTOR (63 downto 0);
    signal retval_2_fu_2905_p20 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2949_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal retval_2_fu_2905_p21 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_2949_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to18 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln258_fu_618_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal mul_ln258_fu_618_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal mul_ln277_fu_622_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal mul_ln277_fu_622_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal mul_ln44_1_fu_634_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal mul_ln44_1_fu_634_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal mul_ln44_2_fu_650_p00 : STD_LOGIC_VECTOR (88 downto 0);
    signal mul_ln44_2_fu_650_p10 : STD_LOGIC_VECTOR (88 downto 0);
    signal mul_ln44_3_fu_658_p00 : STD_LOGIC_VECTOR (96 downto 0);
    signal mul_ln44_3_fu_658_p10 : STD_LOGIC_VECTOR (96 downto 0);
    signal mul_ln44_4_fu_654_p00 : STD_LOGIC_VECTOR (91 downto 0);
    signal mul_ln44_4_fu_654_p10 : STD_LOGIC_VECTOR (91 downto 0);
    signal mul_ln44_5_fu_646_p00 : STD_LOGIC_VECTOR (86 downto 0);
    signal mul_ln44_5_fu_646_p10 : STD_LOGIC_VECTOR (86 downto 0);
    signal mul_ln44_6_fu_638_p00 : STD_LOGIC_VECTOR (81 downto 0);
    signal mul_ln44_6_fu_638_p10 : STD_LOGIC_VECTOR (81 downto 0);
    signal mul_ln44_fu_843_p10 : STD_LOGIC_VECTOR (74 downto 0);
    signal mul_ln516_fu_630_p10 : STD_LOGIC_VECTOR (53 downto 0);
    signal mul_ln616_fu_626_p00 : STD_LOGIC_VECTOR (98 downto 0);
    signal mul_ln616_fu_626_p10 : STD_LOGIC_VECTOR (98 downto 0);
    signal y_is_int_fu_1829_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_is_int_fu_1829_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_is_int_fu_1829_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_is_odd_fu_1930_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_odd_1_fu_2102_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_is_odd_1_fu_2102_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_is_odd_1_fu_2102_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_2_fu_2905_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal retval_2_fu_2905_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal retval_2_fu_2905_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal retval_2_fu_2905_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal retval_2_fu_2905_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal retval_2_fu_2905_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal retval_2_fu_2905_p13 : STD_LOGIC_VECTOR (7 downto 0);
    signal retval_2_fu_2905_p15 : STD_LOGIC_VECTOR (7 downto 0);
    signal retval_2_fu_2905_p17 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component SABR_mul_12s_80ns_90_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (79 downto 0);
        dout : OUT STD_LOGIC_VECTOR (89 downto 0) );
    end component;


    component SABR_mul_13s_71s_71_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (70 downto 0);
        dout : OUT STD_LOGIC_VECTOR (70 downto 0) );
    end component;


    component SABR_mul_40ns_40ns_79_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (39 downto 0);
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component SABR_mul_43ns_36ns_79_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (42 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component SABR_mul_49ns_44ns_93_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (48 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component SABR_mul_50ns_50ns_99_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (49 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        dout : OUT STD_LOGIC_VECTOR (98 downto 0) );
    end component;


    component SABR_mul_54s_6ns_54_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (53 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;


    component SABR_mul_73ns_6ns_79_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (72 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component SABR_mul_77ns_6ns_82_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (76 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (81 downto 0) );
    end component;


    component SABR_mul_78s_54s_131_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (77 downto 0);
        din1 : IN STD_LOGIC_VECTOR (53 downto 0);
        dout : OUT STD_LOGIC_VECTOR (130 downto 0) );
    end component;


    component SABR_mul_82ns_6ns_87_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (81 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (86 downto 0) );
    end component;


    component SABR_mul_83ns_6ns_89_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (82 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (88 downto 0) );
    end component;


    component SABR_mul_87ns_6ns_92_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (86 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (91 downto 0) );
    end component;


    component SABR_mul_92ns_6ns_97_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (91 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (96 downto 0) );
    end component;


    component SABR_mul_71ns_4ns_75_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (70 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (74 downto 0) );
    end component;


    component SABR_sparsemux_7_2_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        def : IN STD_LOGIC_VECTOR (0 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component SABR_bitselect_1ns_52ns_32s_1_1_1 IS
    generic (
        DATAWIDTH : INTEGER;
        ADDRWIDTH : INTEGER );
    port (
        din : IN STD_LOGIC_VECTOR (51 downto 0);
        sel : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component SABR_sparsemux_19_8_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (7 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (7 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (7 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (7 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (7 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (7 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (7 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (7 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (7 downto 0);
        din8_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (63 downto 0);
        din5 : IN STD_LOGIC_VECTOR (63 downto 0);
        din6 : IN STD_LOGIC_VECTOR (63 downto 0);
        din7 : IN STD_LOGIC_VECTOR (63 downto 0);
        din8 : IN STD_LOGIC_VECTOR (63 downto 0);
        def : IN STD_LOGIC_VECTOR (63 downto 0);
        sel : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component SABR_mac_muladd_16s_15ns_19s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_inverse_lut_table_powbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log0_lut_table_array_ROM_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (108 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (104 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (101 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (96 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17g8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (91 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (86 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27ibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (81 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32jbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (76 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_arkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_arralbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_arramb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_inverse_lut_table_powbkb
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_address0,
        ce0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_q0);

    pow_reduce_anonymous_namespace_log0_lut_table_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log0_lut_table_array_ROM_cud
    generic map (
        DataWidth => 109,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log0_lut_table_array_address0,
        ce0 => pow_reduce_anonymous_namespace_log0_lut_table_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_log0_lut_table_array_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_dEe
    generic map (
        DataWidth => 105,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_eOg
    generic map (
        DataWidth => 102,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12fYi
    generic map (
        DataWidth => 97,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17g8j
    generic map (
        DataWidth => 92,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22hbi
    generic map (
        DataWidth => 87,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27ibs
    generic map (
        DataWidth => 82,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_q0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32jbC
    generic map (
        DataWidth => 77,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_address0,
        ce0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_q0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_arkbM
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_address0,
        ce0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0);

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_arralbW
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_q0,
        address1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_address1,
        ce1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_ce1_local,
        q1 => pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_q1);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_U : component SABR_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_arramb6
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_q0);

    mul_12s_80ns_90_1_1_U1 : component SABR_mul_12s_80ns_90_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 80,
        dout_WIDTH => 90)
    port map (
        din0 => b_exp_2_fu_1472_p3,
        din1 => Elog2_fu_604_p1,
        dout => Elog2_fu_604_p2);

    mul_13s_71s_71_1_1_U2 : component SABR_mul_13s_71s_71_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 71,
        dout_WIDTH => 71)
    port map (
        din0 => r_exp_reg_3336,
        din1 => ap_const_lv71_58B90BFBE8E7BCD5E4,
        dout => mul_ln568_fu_609_p2);

    mul_40ns_40ns_79_1_1_U3 : component SABR_mul_40ns_40ns_79_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        dout_WIDTH => 79)
    port map (
        din0 => mul_ln522_fu_614_p0,
        din1 => mul_ln522_fu_614_p1,
        dout => mul_ln522_fu_614_p2);

    mul_43ns_36ns_79_1_1_U4 : component SABR_mul_43ns_36ns_79_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 43,
        din1_WIDTH => 36,
        dout_WIDTH => 79)
    port map (
        din0 => mul_ln258_fu_618_p0,
        din1 => mul_ln258_fu_618_p1,
        dout => mul_ln258_fu_618_p2);

    mul_49ns_44ns_93_1_1_U5 : component SABR_mul_49ns_44ns_93_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 49,
        din1_WIDTH => 44,
        dout_WIDTH => 93)
    port map (
        din0 => mul_ln277_fu_622_p0,
        din1 => mul_ln277_fu_622_p1,
        dout => mul_ln277_fu_622_p2);

    mul_50ns_50ns_99_1_1_U6 : component SABR_mul_50ns_50ns_99_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 50,
        din1_WIDTH => 50,
        dout_WIDTH => 99)
    port map (
        din0 => mul_ln616_fu_626_p0,
        din1 => mul_ln616_fu_626_p1,
        dout => mul_ln616_fu_626_p2);

    mul_54s_6ns_54_1_1_U7 : component SABR_mul_54s_6ns_54_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 54,
        din1_WIDTH => 6,
        dout_WIDTH => 54)
    port map (
        din0 => mul_ln516_fu_630_p0,
        din1 => mul_ln516_fu_630_p1,
        dout => mul_ln516_fu_630_p2);

    mul_73ns_6ns_79_1_1_U8 : component SABR_mul_73ns_6ns_79_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 73,
        din1_WIDTH => 6,
        dout_WIDTH => 79)
    port map (
        din0 => mul_ln44_1_fu_634_p0,
        din1 => mul_ln44_1_fu_634_p1,
        dout => mul_ln44_1_fu_634_p2);

    mul_77ns_6ns_82_1_1_U9 : component SABR_mul_77ns_6ns_82_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 77,
        din1_WIDTH => 6,
        dout_WIDTH => 82)
    port map (
        din0 => mul_ln44_6_fu_638_p0,
        din1 => mul_ln44_6_fu_638_p1,
        dout => mul_ln44_6_fu_638_p2);

    mul_78s_54s_131_1_1_U10 : component SABR_mul_78s_54s_131_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 78,
        din1_WIDTH => 54,
        dout_WIDTH => 131)
    port map (
        din0 => log_base_reg_3213,
        din1 => e_frac_2_fu_2036_p3,
        dout => m_frac_l_fu_642_p2);

    mul_82ns_6ns_87_1_1_U11 : component SABR_mul_82ns_6ns_87_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 82,
        din1_WIDTH => 6,
        dout_WIDTH => 87)
    port map (
        din0 => mul_ln44_5_fu_646_p0,
        din1 => mul_ln44_5_fu_646_p1,
        dout => mul_ln44_5_fu_646_p2);

    mul_83ns_6ns_89_1_1_U12 : component SABR_mul_83ns_6ns_89_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 83,
        din1_WIDTH => 6,
        dout_WIDTH => 89)
    port map (
        din0 => mul_ln44_2_fu_650_p0,
        din1 => mul_ln44_2_fu_650_p1,
        dout => mul_ln44_2_fu_650_p2);

    mul_87ns_6ns_92_1_1_U13 : component SABR_mul_87ns_6ns_92_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 87,
        din1_WIDTH => 6,
        dout_WIDTH => 92)
    port map (
        din0 => mul_ln44_4_fu_654_p0,
        din1 => mul_ln44_4_fu_654_p1,
        dout => mul_ln44_4_fu_654_p2);

    mul_92ns_6ns_97_1_1_U14 : component SABR_mul_92ns_6ns_97_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 92,
        din1_WIDTH => 6,
        dout_WIDTH => 97)
    port map (
        din0 => mul_ln44_3_fu_658_p0,
        din1 => mul_ln44_3_fu_658_p1,
        dout => mul_ln44_3_fu_658_p2);

    mul_71ns_4ns_75_1_1_U15 : component SABR_mul_71ns_4ns_75_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 71,
        din1_WIDTH => 4,
        dout_WIDTH => 75)
    port map (
        din0 => mul_ln44_fu_843_p0,
        din1 => mul_ln44_fu_843_p1,
        dout => mul_ln44_fu_843_p2);

    sparsemux_7_2_1_1_1_U16 : component SABR_sparsemux_7_2_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 1,
        CASE1 => "01",
        din1_WIDTH => 1,
        CASE2 => "00",
        din2_WIDTH => 1,
        def_WIDTH => 1,
        sel_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => y_is_int_fu_1829_p4,
        din2 => ap_const_lv1_0,
        def => y_is_int_fu_1829_p7,
        sel => y_is_int_fu_1829_p8,
        dout => y_is_int_fu_1829_p9);

    bitselect_1ns_52ns_32s_1_1_1_U17 : component SABR_bitselect_1ns_52ns_32s_1_1_1
    generic map (
        DATAWIDTH => 52,
        ADDRWIDTH => 32)
    port map (
        din => es_sig_fu_1669_p1,
        sel => y_is_odd_fu_1930_p2,
        dout => y_is_odd_fu_1930_p3);

    sparsemux_7_2_1_1_1_U18 : component SABR_sparsemux_7_2_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 1,
        CASE1 => "01",
        din1_WIDTH => 1,
        CASE2 => "00",
        din2_WIDTH => 1,
        def_WIDTH => 1,
        sel_WIDTH => 2,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => y_is_odd_reg_3265,
        din2 => ap_const_lv1_0,
        def => y_is_odd_1_fu_2102_p7,
        sel => y_is_odd_1_fu_2102_p8,
        dout => y_is_odd_1_fu_2102_p9);

    sparsemux_19_8_64_1_1_U19 : component SABR_sparsemux_19_8_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10000000",
        din0_WIDTH => 64,
        CASE1 => "01000000",
        din1_WIDTH => 64,
        CASE2 => "00100000",
        din2_WIDTH => 64,
        CASE3 => "00010000",
        din3_WIDTH => 64,
        CASE4 => "00001000",
        din4_WIDTH => 64,
        CASE5 => "00000100",
        din5_WIDTH => 64,
        CASE6 => "00000010",
        din6_WIDTH => 64,
        CASE7 => "00000001",
        din7_WIDTH => 64,
        CASE8 => "00000000",
        din8_WIDTH => 64,
        def_WIDTH => 64,
        sel_WIDTH => 8,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_3FF0000000000000,
        din1 => retval_2_fu_2905_p4,
        din2 => ap_const_lv64_7FFFFFFFFFFFFFFF,
        din3 => bitcast_ln497_1_fu_2748_p1,
        din4 => bitcast_ln497_2_fu_2759_p1,
        din5 => bitcast_ln497_2_fu_2759_p1,
        din6 => bitcast_ln497_1_fu_2748_p1,
        din7 => bitcast_ln497_2_fu_2759_p1,
        din8 => retval_2_fu_2905_p18,
        def => retval_2_fu_2905_p19,
        sel => retval_2_fu_2905_p20,
        dout => retval_2_fu_2905_p21);

    mac_muladd_16s_15ns_19s_31_4_1_U20 : component SABR_mac_muladd_16s_15ns_19s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => m_fix_hi_fu_2275_p4,
        din1 => grp_fu_2949_p1,
        din2 => shl_ln3_fu_2306_p3,
        ce => grp_fu_2949_ce,
        dout => grp_fu_2949_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                Z2_reg_3348 <= sub_ln574_fu_2378_p2(50 downto 43);
                Z2_reg_3348_pp0_iter16_reg <= Z2_reg_3348;
                Z3_reg_3355 <= sub_ln574_fu_2378_p2(42 downto 35);
                Z4_reg_3360 <= Z4_fu_2413_p1;
                a_1_reg_3042 <= sub_ln44_fu_853_p2(75 downto 70);
                a_1_reg_3042_pp0_iter3_reg <= a_1_reg_3042;
                a_1_reg_3042_pp0_iter4_reg <= a_1_reg_3042_pp0_iter3_reg;
                a_1_reg_3042_pp0_iter5_reg <= a_1_reg_3042_pp0_iter4_reg;
                a_1_reg_3042_pp0_iter6_reg <= a_1_reg_3042_pp0_iter5_reg;
                a_1_reg_3042_pp0_iter7_reg <= a_1_reg_3042_pp0_iter6_reg;
                a_2_reg_3058 <= sub_ln44_1_fu_941_p2(81 downto 76);
                a_2_reg_3058_pp0_iter4_reg <= a_2_reg_3058;
                a_2_reg_3058_pp0_iter5_reg <= a_2_reg_3058_pp0_iter4_reg;
                a_2_reg_3058_pp0_iter6_reg <= a_2_reg_3058_pp0_iter5_reg;
                a_2_reg_3058_pp0_iter7_reg <= a_2_reg_3058_pp0_iter6_reg;
                a_reg_3020_pp0_iter2_reg <= a_reg_3020;
                a_reg_3020_pp0_iter3_reg <= a_reg_3020_pp0_iter2_reg;
                a_reg_3020_pp0_iter4_reg <= a_reg_3020_pp0_iter3_reg;
                a_reg_3020_pp0_iter5_reg <= a_reg_3020_pp0_iter4_reg;
                a_reg_3020_pp0_iter6_reg <= a_reg_3020_pp0_iter5_reg;
                a_reg_3020_pp0_iter7_reg <= a_reg_3020_pp0_iter6_reg;
                add_ln261_reg_3380 <= add_ln261_fu_2493_p2;
                bs_exp_reg_2965_pp0_iter2_reg <= bs_exp_reg_2965_pp0_iter1_reg;
                bs_exp_reg_2965_pp0_iter3_reg <= bs_exp_reg_2965_pp0_iter2_reg;
                bs_exp_reg_2965_pp0_iter4_reg <= bs_exp_reg_2965_pp0_iter3_reg;
                bs_exp_reg_2965_pp0_iter5_reg <= bs_exp_reg_2965_pp0_iter4_reg;
                bs_exp_reg_2965_pp0_iter6_reg <= bs_exp_reg_2965_pp0_iter5_reg;
                bs_exp_reg_2965_pp0_iter7_reg <= bs_exp_reg_2965_pp0_iter6_reg;
                bs_exp_reg_2965_pp0_iter8_reg <= bs_exp_reg_2965_pp0_iter7_reg;
                es_exp_reg_3218 <= data_1_fu_1650_p1(62 downto 52);
                exp_Z1P_m_1_reg_3395 <= exp_Z1P_m_1_l_fu_2587_p2(51 downto 2);
                    exp_Z3_m_1_reg_3375(25 downto 0) <= exp_Z3_m_1_fu_2460_p4(25 downto 0);    exp_Z3_m_1_reg_3375(42 downto 35) <= exp_Z3_m_1_fu_2460_p4(42 downto 35);
                exp_read_reg_2960_pp0_iter2_reg <= exp_read_reg_2960_pp0_iter1_reg;
                exp_read_reg_2960_pp0_iter3_reg <= exp_read_reg_2960_pp0_iter2_reg;
                exp_read_reg_2960_pp0_iter4_reg <= exp_read_reg_2960_pp0_iter3_reg;
                exp_read_reg_2960_pp0_iter5_reg <= exp_read_reg_2960_pp0_iter4_reg;
                exp_read_reg_2960_pp0_iter6_reg <= exp_read_reg_2960_pp0_iter5_reg;
                exp_read_reg_2960_pp0_iter7_reg <= exp_read_reg_2960_pp0_iter6_reg;
                exp_read_reg_2960_pp0_iter8_reg <= exp_read_reg_2960_pp0_iter7_reg;
                exp_read_reg_2960_pp0_iter9_reg <= exp_read_reg_2960_pp0_iter8_reg;
                icmp_ln18_3_reg_3193 <= icmp_ln18_3_fu_1448_p2;
                icmp_ln18_4_reg_3009_pp0_iter2_reg <= icmp_ln18_4_reg_3009;
                icmp_ln18_4_reg_3009_pp0_iter3_reg <= icmp_ln18_4_reg_3009_pp0_iter2_reg;
                icmp_ln18_4_reg_3009_pp0_iter4_reg <= icmp_ln18_4_reg_3009_pp0_iter3_reg;
                icmp_ln18_4_reg_3009_pp0_iter5_reg <= icmp_ln18_4_reg_3009_pp0_iter4_reg;
                icmp_ln18_4_reg_3009_pp0_iter6_reg <= icmp_ln18_4_reg_3009_pp0_iter5_reg;
                icmp_ln18_4_reg_3009_pp0_iter7_reg <= icmp_ln18_4_reg_3009_pp0_iter6_reg;
                icmp_ln18_4_reg_3009_pp0_iter8_reg <= icmp_ln18_4_reg_3009_pp0_iter7_reg;
                icmp_ln18_4_reg_3009_pp0_iter9_reg <= icmp_ln18_4_reg_3009_pp0_iter8_reg;
                icmp_ln340_1_reg_3003_pp0_iter2_reg <= icmp_ln340_1_reg_3003;
                icmp_ln340_1_reg_3003_pp0_iter3_reg <= icmp_ln340_1_reg_3003_pp0_iter2_reg;
                icmp_ln340_1_reg_3003_pp0_iter4_reg <= icmp_ln340_1_reg_3003_pp0_iter3_reg;
                icmp_ln340_1_reg_3003_pp0_iter5_reg <= icmp_ln340_1_reg_3003_pp0_iter4_reg;
                icmp_ln340_1_reg_3003_pp0_iter6_reg <= icmp_ln340_1_reg_3003_pp0_iter5_reg;
                icmp_ln340_1_reg_3003_pp0_iter7_reg <= icmp_ln340_1_reg_3003_pp0_iter6_reg;
                icmp_ln340_1_reg_3003_pp0_iter8_reg <= icmp_ln340_1_reg_3003_pp0_iter7_reg;
                icmp_ln340_1_reg_3003_pp0_iter9_reg <= icmp_ln340_1_reg_3003_pp0_iter8_reg;
                icmp_ln422_reg_3298 <= icmp_ln422_fu_2066_p2;
                icmp_ln422_reg_3298_pp0_iter12_reg <= icmp_ln422_reg_3298;
                icmp_ln422_reg_3298_pp0_iter13_reg <= icmp_ln422_reg_3298_pp0_iter12_reg;
                icmp_ln422_reg_3298_pp0_iter14_reg <= icmp_ln422_reg_3298_pp0_iter13_reg;
                icmp_ln422_reg_3298_pp0_iter15_reg <= icmp_ln422_reg_3298_pp0_iter14_reg;
                icmp_ln422_reg_3298_pp0_iter16_reg <= icmp_ln422_reg_3298_pp0_iter15_reg;
                icmp_ln422_reg_3298_pp0_iter17_reg <= icmp_ln422_reg_3298_pp0_iter16_reg;
                icmp_ln422_reg_3298_pp0_iter18_reg <= icmp_ln422_reg_3298_pp0_iter17_reg;
                icmp_ln628_1_reg_3400 <= icmp_ln628_1_fu_2676_p2;
                icmp_ln628_reg_3326 <= icmp_ln628_fu_2301_p2;
                icmp_ln628_reg_3326_pp0_iter12_reg <= icmp_ln628_reg_3326;
                icmp_ln628_reg_3326_pp0_iter13_reg <= icmp_ln628_reg_3326_pp0_iter12_reg;
                icmp_ln628_reg_3326_pp0_iter14_reg <= icmp_ln628_reg_3326_pp0_iter13_reg;
                icmp_ln628_reg_3326_pp0_iter15_reg <= icmp_ln628_reg_3326_pp0_iter14_reg;
                icmp_ln628_reg_3326_pp0_iter16_reg <= icmp_ln628_reg_3326_pp0_iter15_reg;
                icmp_ln628_reg_3326_pp0_iter17_reg <= icmp_ln628_reg_3326_pp0_iter16_reg;
                icmp_ln628_reg_3326_pp0_iter18_reg <= icmp_ln628_reg_3326_pp0_iter17_reg;
                icmp_ln645_reg_3405 <= icmp_ln645_fu_2682_p2;
                log_base_reg_3213 <= add_ln525_1_fu_1634_p2(120 downto 43);
                m_diff_hi_reg_3343 <= sub_ln574_fu_2378_p2(58 downto 51);
                m_diff_hi_reg_3343_pp0_iter16_reg <= m_diff_hi_reg_3343;
                m_exp_reg_3223 <= m_exp_fu_1677_p2;
                m_fix_reg_3311 <= m_fix_0_in_in_v_v_fu_2250_p3(117 downto 59);
                m_fix_reg_3311_pp0_iter12_reg <= m_fix_reg_3311;
                m_fix_reg_3311_pp0_iter13_reg <= m_fix_reg_3311_pp0_iter12_reg;
                m_fix_reg_3311_pp0_iter14_reg <= m_fix_reg_3311_pp0_iter13_reg;
                m_frac_l_reg_3282 <= m_frac_l_fu_642_p2;
                or_ln378_1_reg_3252 <= or_ln378_1_fu_1861_p2;
                or_ln378_1_reg_3252_pp0_iter11_reg <= or_ln378_1_reg_3252;
                or_ln378_1_reg_3252_pp0_iter12_reg <= or_ln378_1_reg_3252_pp0_iter11_reg;
                or_ln378_1_reg_3252_pp0_iter13_reg <= or_ln378_1_reg_3252_pp0_iter12_reg;
                or_ln378_1_reg_3252_pp0_iter14_reg <= or_ln378_1_reg_3252_pp0_iter13_reg;
                or_ln378_1_reg_3252_pp0_iter15_reg <= or_ln378_1_reg_3252_pp0_iter14_reg;
                or_ln378_1_reg_3252_pp0_iter16_reg <= or_ln378_1_reg_3252_pp0_iter15_reg;
                or_ln378_1_reg_3252_pp0_iter17_reg <= or_ln378_1_reg_3252_pp0_iter16_reg;
                or_ln378_1_reg_3252_pp0_iter18_reg <= or_ln378_1_reg_3252_pp0_iter17_reg;
                or_ln386_2_reg_3259 <= or_ln386_2_fu_1891_p2;
                or_ln386_2_reg_3259_pp0_iter11_reg <= or_ln386_2_reg_3259;
                or_ln386_2_reg_3259_pp0_iter12_reg <= or_ln386_2_reg_3259_pp0_iter11_reg;
                or_ln386_2_reg_3259_pp0_iter13_reg <= or_ln386_2_reg_3259_pp0_iter12_reg;
                or_ln386_2_reg_3259_pp0_iter14_reg <= or_ln386_2_reg_3259_pp0_iter13_reg;
                or_ln386_2_reg_3259_pp0_iter15_reg <= or_ln386_2_reg_3259_pp0_iter14_reg;
                or_ln386_2_reg_3259_pp0_iter16_reg <= or_ln386_2_reg_3259_pp0_iter15_reg;
                or_ln386_2_reg_3259_pp0_iter17_reg <= or_ln386_2_reg_3259_pp0_iter16_reg;
                or_ln386_2_reg_3259_pp0_iter18_reg <= or_ln386_2_reg_3259_pp0_iter17_reg;
                or_ln431_2_reg_3270 <= or_ln431_2_fu_1972_p2;
                or_ln431_2_reg_3270_pp0_iter11_reg <= or_ln431_2_reg_3270;
                or_ln431_2_reg_3270_pp0_iter12_reg <= or_ln431_2_reg_3270_pp0_iter11_reg;
                or_ln431_2_reg_3270_pp0_iter13_reg <= or_ln431_2_reg_3270_pp0_iter12_reg;
                or_ln431_2_reg_3270_pp0_iter14_reg <= or_ln431_2_reg_3270_pp0_iter13_reg;
                or_ln431_2_reg_3270_pp0_iter15_reg <= or_ln431_2_reg_3270_pp0_iter14_reg;
                or_ln431_2_reg_3270_pp0_iter16_reg <= or_ln431_2_reg_3270_pp0_iter15_reg;
                or_ln431_2_reg_3270_pp0_iter17_reg <= or_ln431_2_reg_3270_pp0_iter16_reg;
                or_ln431_2_reg_3270_pp0_iter18_reg <= or_ln431_2_reg_3270_pp0_iter17_reg;
                or_ln438_2_reg_3276 <= or_ln438_2_fu_2012_p2;
                or_ln438_2_reg_3276_pp0_iter11_reg <= or_ln438_2_reg_3276;
                or_ln438_2_reg_3276_pp0_iter12_reg <= or_ln438_2_reg_3276_pp0_iter11_reg;
                or_ln438_2_reg_3276_pp0_iter13_reg <= or_ln438_2_reg_3276_pp0_iter12_reg;
                or_ln438_2_reg_3276_pp0_iter14_reg <= or_ln438_2_reg_3276_pp0_iter13_reg;
                or_ln438_2_reg_3276_pp0_iter15_reg <= or_ln438_2_reg_3276_pp0_iter14_reg;
                or_ln438_2_reg_3276_pp0_iter16_reg <= or_ln438_2_reg_3276_pp0_iter15_reg;
                or_ln438_2_reg_3276_pp0_iter17_reg <= or_ln438_2_reg_3276_pp0_iter16_reg;
                or_ln438_2_reg_3276_pp0_iter18_reg <= or_ln438_2_reg_3276_pp0_iter17_reg;
                out_sig_reg_3410 <= out_sig_fu_2708_p3;
                r_exp_reg_3336 <= r_exp_fu_2356_p3;
                r_exp_reg_3336_pp0_iter15_reg <= r_exp_reg_3336;
                r_exp_reg_3336_pp0_iter16_reg <= r_exp_reg_3336_pp0_iter15_reg;
                r_exp_reg_3336_pp0_iter17_reg <= r_exp_reg_3336_pp0_iter16_reg;
                r_sign_reg_3303 <= r_sign_fu_2121_p2;
                r_sign_reg_3303_pp0_iter12_reg <= r_sign_reg_3303;
                r_sign_reg_3303_pp0_iter13_reg <= r_sign_reg_3303_pp0_iter12_reg;
                r_sign_reg_3303_pp0_iter14_reg <= r_sign_reg_3303_pp0_iter13_reg;
                r_sign_reg_3303_pp0_iter15_reg <= r_sign_reg_3303_pp0_iter14_reg;
                r_sign_reg_3303_pp0_iter16_reg <= r_sign_reg_3303_pp0_iter15_reg;
                r_sign_reg_3303_pp0_iter17_reg <= r_sign_reg_3303_pp0_iter16_reg;
                r_sign_reg_3303_pp0_iter18_reg <= r_sign_reg_3303_pp0_iter17_reg;
                sub_ln44_1_reg_3053 <= sub_ln44_1_fu_941_p2;
                tmp_10_reg_3086 <= sub_ln44_3_fu_1110_p2(120 downto 34);
                tmp_11_reg_3092 <= sub_ln44_3_fu_1110_p2(114 downto 34);
                tmp_13_reg_3097 <= sub_ln44_3_fu_1110_p2(120 downto 115);
                tmp_13_reg_3097_pp0_iter6_reg <= tmp_13_reg_3097;
                tmp_13_reg_3097_pp0_iter7_reg <= tmp_13_reg_3097_pp0_iter6_reg;
                tmp_14_reg_3103 <= sub_ln44_4_fu_1198_p2(125 downto 44);
                tmp_15_reg_3109 <= sub_ln44_4_fu_1198_p2(119 downto 44);
                tmp_16_reg_3114 <= sub_ln44_4_fu_1198_p2(125 downto 120);
                tmp_16_reg_3114_pp0_iter7_reg <= tmp_16_reg_3114;
                tmp_17_reg_3120 <= sub_ln44_5_fu_1286_p2(130 downto 54);
                tmp_18_reg_3126 <= sub_ln44_5_fu_1286_p2(124 downto 54);
                tmp_19_reg_3131 <= sub_ln44_5_fu_1286_p2(130 downto 125);
                tmp_1_reg_3244 <= m_exp_fu_1677_p2(11 downto 11);
                tmp_20_reg_3177 <= sub_ln44_6_fu_1398_p2(135 downto 64);
                tmp_21_reg_3182 <= sub_ln44_6_fu_1398_p2(135 downto 96);
                tmp_23_reg_3316 <= zext_ln549_fu_2261_p1(129 downto 129);
                tmp_23_reg_3316_pp0_iter12_reg <= tmp_23_reg_3316;
                tmp_2_reg_3206 <= b_exp_fu_1431_p2(11 downto 11);
                tmp_30_reg_3292 <= m_frac_l_fu_642_p2(130 downto 130);
                tmp_30_reg_3292_pp0_iter11_reg <= tmp_30_reg_3292;
                tmp_30_reg_3292_pp0_iter12_reg <= tmp_30_reg_3292_pp0_iter11_reg;
                tmp_30_reg_3292_pp0_iter13_reg <= tmp_30_reg_3292_pp0_iter12_reg;
                tmp_30_reg_3292_pp0_iter14_reg <= tmp_30_reg_3292_pp0_iter13_reg;
                tmp_30_reg_3292_pp0_iter15_reg <= tmp_30_reg_3292_pp0_iter14_reg;
                tmp_30_reg_3292_pp0_iter16_reg <= tmp_30_reg_3292_pp0_iter15_reg;
                tmp_30_reg_3292_pp0_iter17_reg <= tmp_30_reg_3292_pp0_iter16_reg;
                tmp_30_reg_3292_pp0_iter18_reg <= tmp_30_reg_3292_pp0_iter17_reg;
                tmp_5_reg_2987_pp0_iter2_reg <= tmp_5_reg_2987_pp0_iter1_reg;
                tmp_5_reg_2987_pp0_iter3_reg <= tmp_5_reg_2987_pp0_iter2_reg;
                tmp_5_reg_2987_pp0_iter4_reg <= tmp_5_reg_2987_pp0_iter3_reg;
                tmp_5_reg_2987_pp0_iter5_reg <= tmp_5_reg_2987_pp0_iter4_reg;
                tmp_5_reg_2987_pp0_iter6_reg <= tmp_5_reg_2987_pp0_iter5_reg;
                tmp_5_reg_2987_pp0_iter7_reg <= tmp_5_reg_2987_pp0_iter6_reg;
                tmp_5_reg_2987_pp0_iter8_reg <= tmp_5_reg_2987_pp0_iter7_reg;
                tmp_7_reg_3048 <= sub_ln44_fu_853_p2(69 downto 3);
                tmp_8_reg_3075 <= sub_ln44_2_fu_1022_p2(95 downto 10);
                tmp_9_reg_3080 <= sub_ln44_2_fu_1022_p2(101 downto 96);
                tmp_9_reg_3080_pp0_iter5_reg <= tmp_9_reg_3080;
                tmp_9_reg_3080_pp0_iter6_reg <= tmp_9_reg_3080_pp0_iter5_reg;
                tmp_9_reg_3080_pp0_iter7_reg <= tmp_9_reg_3080_pp0_iter6_reg;
                tmp_reg_2980_pp0_iter2_reg <= tmp_reg_2980_pp0_iter1_reg;
                tmp_reg_2980_pp0_iter3_reg <= tmp_reg_2980_pp0_iter2_reg;
                tmp_reg_2980_pp0_iter4_reg <= tmp_reg_2980_pp0_iter3_reg;
                tmp_reg_2980_pp0_iter5_reg <= tmp_reg_2980_pp0_iter4_reg;
                tmp_reg_2980_pp0_iter6_reg <= tmp_reg_2980_pp0_iter5_reg;
                tmp_reg_2980_pp0_iter7_reg <= tmp_reg_2980_pp0_iter6_reg;
                tmp_reg_2980_pp0_iter8_reg <= tmp_reg_2980_pp0_iter7_reg;
                tmp_reg_2980_pp0_iter9_reg <= tmp_reg_2980_pp0_iter8_reg;
                trunc_ln39_1_reg_3064 <= trunc_ln39_1_fu_957_p1;
                trunc_ln657_reg_3415 <= trunc_ln657_fu_2716_p1;
                x_is_0_reg_3199 <= x_is_0_fu_1453_p2;
                x_is_1_reg_3187 <= x_is_1_fu_1443_p2;
                x_is_n1_reg_3233 <= x_is_n1_fu_1699_p2;
                x_is_n1_reg_3233_pp0_iter11_reg <= x_is_n1_reg_3233;
                x_is_n1_reg_3233_pp0_iter12_reg <= x_is_n1_reg_3233_pp0_iter11_reg;
                x_is_n1_reg_3233_pp0_iter13_reg <= x_is_n1_reg_3233_pp0_iter12_reg;
                x_is_n1_reg_3233_pp0_iter14_reg <= x_is_n1_reg_3233_pp0_iter13_reg;
                x_is_n1_reg_3233_pp0_iter15_reg <= x_is_n1_reg_3233_pp0_iter14_reg;
                x_is_n1_reg_3233_pp0_iter16_reg <= x_is_n1_reg_3233_pp0_iter15_reg;
                x_is_n1_reg_3233_pp0_iter17_reg <= x_is_n1_reg_3233_pp0_iter16_reg;
                x_is_n1_reg_3233_pp0_iter18_reg <= x_is_n1_reg_3233_pp0_iter17_reg;
                x_is_neg_reg_3239 <= x_is_neg_fu_1752_p2;
                y_is_odd_reg_3265 <= y_is_odd_fu_1930_p3;
                z2_reg_3036 <= sub_ln44_fu_853_p2(75 downto 3);
                z4_reg_3069 <= sub_ln44_2_fu_1022_p2(101 downto 10);
                    zext_ln502_reg_2993_pp0_iter2_reg(5 downto 0) <= zext_ln502_reg_2993_pp0_iter1_reg(5 downto 0);
                    zext_ln502_reg_2993_pp0_iter3_reg(5 downto 0) <= zext_ln502_reg_2993_pp0_iter2_reg(5 downto 0);
                    zext_ln502_reg_2993_pp0_iter4_reg(5 downto 0) <= zext_ln502_reg_2993_pp0_iter3_reg(5 downto 0);
                    zext_ln502_reg_2993_pp0_iter5_reg(5 downto 0) <= zext_ln502_reg_2993_pp0_iter4_reg(5 downto 0);
                    zext_ln502_reg_2993_pp0_iter6_reg(5 downto 0) <= zext_ln502_reg_2993_pp0_iter5_reg(5 downto 0);
                    zext_ln502_reg_2993_pp0_iter7_reg(5 downto 0) <= zext_ln502_reg_2993_pp0_iter6_reg(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                a_reg_3020 <= mul_ln516_fu_630_p2(53 downto 50);
                bs_exp_reg_2965 <= data_fu_662_p1(62 downto 52);
                bs_exp_reg_2965_pp0_iter1_reg <= bs_exp_reg_2965;
                bs_sig_reg_2972 <= bs_sig_fu_674_p1;
                exp_read_reg_2960 <= exp;
                exp_read_reg_2960_pp0_iter1_reg <= exp_read_reg_2960;
                icmp_ln18_4_reg_3009 <= icmp_ln18_4_fu_714_p2;
                icmp_ln340_1_reg_3003 <= icmp_ln340_1_fu_709_p2;
                mul_ln516_reg_3014 <= mul_ln516_fu_630_p2;
                tmp_5_reg_2987 <= data_fu_662_p1(51 downto 51);
                tmp_5_reg_2987_pp0_iter1_reg <= tmp_5_reg_2987;
                tmp_6_reg_3031 <= mul_ln516_fu_630_p2(53 downto 53);
                tmp_reg_2980 <= data_fu_662_p1(63 downto 63);
                tmp_reg_2980_pp0_iter1_reg <= tmp_reg_2980;
                trunc_ln39_reg_3026 <= trunc_ln39_fu_762_p1;
                    zext_ln502_reg_2993(5 downto 0) <= zext_ln502_fu_704_p1(5 downto 0);
                    zext_ln502_reg_2993_pp0_iter1_reg(5 downto 0) <= zext_ln502_reg_2993(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln502_reg_2993(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln502_reg_2993_pp0_iter1_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln502_reg_2993_pp0_iter2_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln502_reg_2993_pp0_iter3_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln502_reg_2993_pp0_iter4_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln502_reg_2993_pp0_iter5_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln502_reg_2993_pp0_iter6_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln502_reg_2993_pp0_iter7_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    exp_Z3_m_1_reg_3375(34 downto 26) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Elog2_fu_604_p1 <= ap_const_lv90_58B90BFBE8E7BCD5E4F1(80 - 1 downto 0);
    Z3_fu_2403_p4 <= sub_ln574_fu_2378_p2(42 downto 35);
    Z4_fu_2413_p1 <= sub_ln574_fu_2378_p2(35 - 1 downto 0);
    Z4_ind_fu_2417_p4 <= sub_ln574_fu_2378_p2(34 downto 27);
    add_ln209_1_fu_1518_p2 <= std_logic_vector(unsigned(zext_ln194_1_fu_1488_p1) + unsigned(zext_ln194_2_fu_1492_p1));
    add_ln209_2_fu_1528_p2 <= std_logic_vector(unsigned(zext_ln209_fu_1524_p1) + unsigned(add_ln209_fu_1512_p2));
    add_ln209_3_fu_1534_p2 <= std_logic_vector(unsigned(zext_ln194_3_fu_1496_p1) + unsigned(zext_ln194_4_fu_1500_p1));
    add_ln209_4_fu_1540_p2 <= std_logic_vector(unsigned(zext_ln194_5_fu_1504_p1) + unsigned(zext_ln194_6_fu_1508_p1));
    add_ln209_5_fu_1550_p2 <= std_logic_vector(unsigned(zext_ln209_1_fu_1546_p1) + unsigned(add_ln209_3_fu_1534_p2));
    add_ln209_fu_1512_p2 <= std_logic_vector(unsigned(zext_ln194_fu_1484_p1) + unsigned(pow_reduce_anonymous_namespace_log0_lut_table_array_q0));
    add_ln261_fu_2493_p2 <= std_logic_vector(unsigned(exp_Z4_m_1_fu_2454_p2) + unsigned(zext_ln261_1_fu_2489_p1));
    add_ln280_fu_2577_p2 <= std_logic_vector(unsigned(exp_Z2P_m_1_fu_2513_p2) + unsigned(zext_ln280_2_fu_2573_p1));
    add_ln373_fu_1781_p2 <= std_logic_vector(unsigned(es_exp_cast_fu_1771_p4) + unsigned(ap_const_lv6_1));
    add_ln44_1_fu_915_p2 <= std_logic_vector(unsigned(zext_ln44_3_fu_907_p1) + unsigned(zext_ln44_4_fu_911_p1));
    add_ln44_2_fu_995_p2 <= std_logic_vector(unsigned(zext_ln44_8_fu_987_p1) + unsigned(zext_ln44_9_fu_991_p1));
    add_ln44_3_fu_1084_p2 <= std_logic_vector(unsigned(zext_ln44_13_fu_1076_p1) + unsigned(zext_ln44_14_fu_1080_p1));
    add_ln44_4_fu_1172_p2 <= std_logic_vector(unsigned(zext_ln44_18_fu_1164_p1) + unsigned(zext_ln44_19_fu_1168_p1));
    add_ln44_5_fu_1260_p2 <= std_logic_vector(unsigned(zext_ln44_23_fu_1252_p1) + unsigned(zext_ln44_24_fu_1256_p1));
    add_ln44_6_fu_1372_p2 <= std_logic_vector(unsigned(zext_ln44_28_fu_1364_p1) + unsigned(zext_ln44_29_fu_1368_p1));
    add_ln44_fu_834_p2 <= std_logic_vector(unsigned(zext_ln44_fu_830_p1) + unsigned(select_ln42_fu_816_p3));
    add_ln525_1_fu_1634_p2 <= std_logic_vector(unsigned(add_ln525_fu_1624_p2) + unsigned(zext_ln525_fu_1630_p1));
    add_ln525_fu_1624_p2 <= std_logic_vector(signed(sext_ln525_fu_1616_p1) + signed(sext_ln525_1_fu_1620_p1));
    add_ln563_1_fu_2342_p2 <= std_logic_vector(unsigned(tmp_9_cast_fu_2317_p4) + unsigned(ap_const_lv13_1));
    add_ln616_1_fu_2640_p2 <= std_logic_vector(unsigned(shl_ln4_fu_2628_p3) + unsigned(zext_ln616_2_fu_2636_p1));
    add_ln616_fu_2613_p2 <= std_logic_vector(unsigned(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0) + unsigned(ap_const_lv58_10));
    and_ln342_1_fu_2819_p2 <= (xor_ln386_1_fu_2793_p2 and xor_ln342_fu_2814_p2);
    and_ln342_fu_2799_p2 <= (xor_ln386_1_fu_2793_p2 and x_is_n1_reg_3233_pp0_iter18_reg);
    and_ln373_1_fu_1797_p2 <= (lshr_ln373_fu_1791_p2 and es_sig_fu_1669_p1);
    and_ln378_fu_1849_p2 <= (y_is_inf_fu_1715_p2 and x_is_n1_fu_1699_p2);
    and_ln386_1_fu_2809_p2 <= (xor_ln386_2_fu_2804_p2 and or_ln386_2_reg_3259_pp0_iter18_reg);
    and_ln386_fu_1879_p2 <= (xor_ln386_fu_1873_p2 and x_is_neg_fu_1752_p2);
    and_ln422_1_fu_2088_p2 <= (icmp_ln422_fu_2066_p2 and and_ln422_fu_2082_p2);
    and_ln422_fu_2082_p2 <= (xor_ln421_fu_2076_p2 and icmp_ln422_1_fu_2071_p2);
    and_ln431_1_fu_1944_p2 <= (y_is_ninf_fu_1909_p2 and tmp_2_reg_3206);
    and_ln431_2_fu_1949_p2 <= (y_is_pos_fu_1897_p2 and x_is_inf_fu_1737_p2);
    and_ln431_3_fu_1955_p2 <= (x_is_0_reg_3199 and es_sign_fu_1653_p3);
    and_ln431_4_fu_2825_p2 <= (or_ln431_2_reg_3270_pp0_iter18_reg and and_ln342_1_fu_2819_p2);
    and_ln431_5_fu_2830_p2 <= (xor_ln431_fu_2731_p2 and and_ln342_1_fu_2819_p2);
    and_ln431_fu_1938_p2 <= (y_is_pinf_fu_1903_p2 and x_abs_greater_1_fu_1915_p2);
    and_ln438_1_fu_1983_p2 <= (y_is_ninf_fu_1909_p2 and x_abs_greater_1_fu_1915_p2);
    and_ln438_2_fu_1989_p2 <= (y_is_pos_fu_1897_p2 and x_is_0_reg_3199);
    and_ln438_3_fu_1994_p2 <= (x_is_inf_fu_1737_p2 and es_sign_fu_1653_p3);
    and_ln438_4_fu_2836_p2 <= (or_ln438_2_reg_3276_pp0_iter18_reg and and_ln431_5_fu_2830_p2);
    and_ln438_5_fu_2841_p2 <= (xor_ln438_fu_2736_p2 and and_ln431_5_fu_2830_p2);
    and_ln438_fu_1978_p2 <= (y_is_pinf_fu_1903_p2 and tmp_2_reg_3206);
    and_ln628_1_fu_2847_p2 <= (or_ln628_fu_2767_p2 and and_ln438_5_fu_2841_p2);
    and_ln628_fu_2763_p2 <= (icmp_ln628_reg_3326_pp0_iter18_reg and icmp_ln422_reg_3298_pp0_iter18_reg);
    and_ln629_1_fu_2863_p2 <= (xor_ln629_fu_2858_p2 and and_ln628_1_fu_2847_p2);
    and_ln629_fu_2853_p2 <= (tmp_30_reg_3292_pp0_iter18_reg and and_ln628_1_fu_2847_p2);
    and_ln645_1_fu_2880_p2 <= (and_ln645_fu_2875_p2 and and_ln438_5_fu_2841_p2);
    and_ln645_fu_2875_p2 <= (xor_ln628_fu_2869_p2 and icmp_ln645_reg_3405);
    and_ln_fu_2548_p5 <= (((Z2_reg_3348_pp0_iter16_reg & ap_const_lv1_0) & tmp_26_fu_2519_p4) & ap_const_lv2_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter19, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to18_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to18 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to18)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to18 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= retval_2_fu_2905_p21;
    ashr_ln545_fu_2149_p2 <= std_logic_vector(shift_right(signed(m_frac_l_reg_3282),to_integer(unsigned('0' & zext_ln545_fu_2145_p1(31-1 downto 0)))));
    ashr_ln546_fu_2184_p2 <= std_logic_vector(shift_right(signed(m_fix_l_fu_2167_p3),to_integer(unsigned('0' & zext_ln546_fu_2174_p1(31-1 downto 0)))));
    ashr_ln553_fu_2237_p2 <= std_logic_vector(shift_right(signed(m_frac_l_reg_3282),to_integer(unsigned('0' & zext_ln553_fu_2228_p1(31-1 downto 0)))));
    b_exp_1_fu_1466_p2 <= std_logic_vector(unsigned(zext_ln486_fu_1428_p1) + unsigned(ap_const_lv12_C02));
    b_exp_2_fu_1472_p3 <= 
        b_exp_1_fu_1466_p2 when (tmp_5_reg_2987_pp0_iter8_reg(0) = '1') else 
        b_exp_fu_1431_p2;
    b_exp_fu_1431_p2 <= std_logic_vector(unsigned(zext_ln486_fu_1428_p1) + unsigned(ap_const_lv12_C01));
    b_frac_1_fu_728_p3 <= (ap_const_lv1_1 & bs_sig_reg_2972);
    b_frac_fu_719_p4 <= ((ap_const_lv1_1 & bs_sig_reg_2972) & ap_const_lv1_0);
    bitcast_ln497_1_fu_2748_p1 <= t_1_fu_2741_p3;
    bitcast_ln497_2_fu_2759_p1 <= t_2_fu_2752_p3;
    bs_sig_fu_674_p1 <= data_fu_662_p1(52 - 1 downto 0);
    data_1_fu_1650_p1 <= exp_read_reg_2960_pp0_iter9_reg;
    data_fu_662_p1 <= base_r;
    eZ_1_fu_972_p3 <= (ap_const_lv1_1 & zext_ln40_1_fu_968_p1);
    eZ_2_fu_1061_p3 <= (ap_const_lv1_1 & zext_ln40_2_fu_1058_p1);
    eZ_3_fu_1149_p3 <= (ap_const_lv1_1 & zext_ln40_3_fu_1146_p1);
    eZ_4_fu_1237_p3 <= (ap_const_lv1_1 & zext_ln40_4_fu_1234_p1);
    eZ_5_fu_1349_p3 <= (ap_const_lv1_1 & zext_ln40_5_fu_1346_p1);
    eZ_fu_892_p3 <= (ap_const_lv1_1 & zext_ln40_fu_889_p1);
    e_frac_1_fu_2030_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln532_fu_2026_p1));
    e_frac_2_fu_2036_p3 <= 
        e_frac_1_fu_2030_p2 when (es_sign_fu_1653_p3(0) = '1') else 
        zext_ln532_fu_2026_p1;
    e_frac_fu_2018_p3 <= (ap_const_lv1_1 & es_sig_fu_1669_p1);
    empty_fu_2257_p1 <= m_fix_0_in_in_v_v_fu_2250_p3(130 - 1 downto 0);
    es_exp_cast_fu_1771_p4 <= data_1_fu_1650_p1(57 downto 52);
    es_exp_fu_1661_p3 <= data_1_fu_1650_p1(62 downto 52);
    es_sig_fu_1669_p1 <= data_1_fu_1650_p1(52 - 1 downto 0);
    es_sign_fu_1653_p3 <= data_1_fu_1650_p1(63 downto 63);
    exp_Z1P_m_1_l_fu_2587_p2 <= std_logic_vector(unsigned(zext_ln280_1_fu_2583_p1) + unsigned(zext_ln280_fu_2559_p1));
    exp_Z1_hi_fu_2603_p4 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0(57 downto 8);
    exp_Z2P_m_1_fu_2513_p2 <= std_logic_vector(unsigned(zext_ln261_fu_2510_p1) + unsigned(zext_ln255_fu_2507_p1));
    exp_Z2_m_1_fu_2529_p4 <= ((Z2_reg_3348_pp0_iter16_reg & ap_const_lv1_0) & tmp_26_fu_2519_p4);
    exp_Z3_m_1_fu_2460_p4 <= ((Z3_reg_3355 & ap_const_lv9_0) & pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_q0);
    exp_Z4_m_1_fu_2454_p2 <= std_logic_vector(unsigned(zext_ln250_fu_2447_p1) + unsigned(zext_ln250_1_fu_2450_p1));
    f_Z4_fu_2437_p4 <= pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_q1(25 downto 16);

    grp_fu_2949_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_2949_ce <= ap_const_logic_1;
        else 
            grp_fu_2949_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2949_p1 <= ap_const_lv31_5C55(15 - 1 downto 0);
    icmp_ln18_1_fu_1709_p2 <= "1" when (es_sig_fu_1669_p1 = ap_const_lv52_0) else "0";
    icmp_ln18_2_fu_1721_p2 <= "0" when (es_sig_fu_1669_p1 = ap_const_lv52_0) else "1";
    icmp_ln18_3_fu_1448_p2 <= "1" when (bs_exp_reg_2965_pp0_iter8_reg = ap_const_lv11_7FF) else "0";
    icmp_ln18_4_fu_714_p2 <= "0" when (bs_sig_reg_2972 = ap_const_lv52_0) else "1";
    icmp_ln18_fu_1703_p2 <= "1" when (es_exp_fu_1661_p3 = ap_const_lv11_7FF) else "0";
    icmp_ln340_1_fu_709_p2 <= "1" when (bs_sig_reg_2972 = ap_const_lv52_0) else "0";
    icmp_ln340_fu_1437_p2 <= "1" when (b_exp_fu_1431_p2 = ap_const_lv12_0) else "0";
    icmp_ln372_fu_1757_p2 <= "1" when (signed(m_exp_fu_1677_p2) > signed(ap_const_lv12_33)) else "0";
    icmp_ln421_fu_2061_p2 <= "1" when (m_exp_reg_3223 = ap_const_lv12_0) else "0";
    icmp_ln422_1_fu_2071_p2 <= "1" when (signed(m_exp_reg_3223) < signed(ap_const_lv12_35)) else "0";
    icmp_ln422_fu_2066_p2 <= "1" when (signed(m_exp_reg_3223) > signed(ap_const_lv12_0)) else "0";
    icmp_ln563_fu_2336_p2 <= "0" when (trunc_ln563_fu_2333_p1 = ap_const_lv18_0) else "1";
    icmp_ln628_1_fu_2676_p2 <= "1" when (signed(tmp_29_fu_2666_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln628_fu_2301_p2 <= "0" when (m_frac_l_reg_3282 = sext_ln628_fu_2297_p1) else "1";
    icmp_ln645_fu_2682_p2 <= "1" when (signed(r_exp_2_fu_2659_p3) < signed(ap_const_lv13_1C02)) else "0";
    index0_fu_694_p4 <= data_fu_662_p1(51 downto 46);
    log_sum_1_fu_1560_p2 <= std_logic_vector(unsigned(zext_ln209_2_fu_1556_p1) + unsigned(add_ln209_2_fu_1528_p2));
    lshr_ln373_fu_1791_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv52_FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln373_fu_1787_p1(31-1 downto 0)))));
    lshr_ln522_1_fu_1598_p4 <= sub_ln522_fu_1592_p2(116 downto 45);
    lshr_ln_fu_1571_p4 <= mul_ln522_fu_614_p2(78 downto 1);
    m_exp_fu_1677_p2 <= std_logic_vector(unsigned(zext_ln486_1_fu_1673_p1) + unsigned(ap_const_lv12_C01));
    m_fix_0_in_in_v_v_fu_2250_p3 <= 
        select_ln553_1_fu_2242_p3 when (tmp_1_reg_3244(0) = '1') else 
        shl_ln552_fu_2204_p2;
    m_fix_a_fu_2368_p4 <= mul_ln568_fu_609_p2(70 downto 12);
    m_fix_back_fu_2190_p3 <= 
        shl_ln546_fu_2178_p2 when (tmp_1_reg_3244(0) = '1') else 
        ashr_ln546_fu_2184_p2;
    m_fix_hi_fu_2275_p4 <= m_fix_0_in_in_v_v_fu_2250_p3(129 downto 114);
    m_fix_l_fu_2167_p3 <= 
        trunc_ln545_fu_2159_p1 when (tmp_1_reg_3244(0) = '1') else 
        trunc_ln545_1_fu_2163_p1;
    mul_ln258_fu_618_p0 <= mul_ln258_fu_618_p00(43 - 1 downto 0);
    mul_ln258_fu_618_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z3_m_1_fu_2460_p4),79));
    mul_ln258_fu_618_p1 <= mul_ln258_fu_618_p10(36 - 1 downto 0);
    mul_ln258_fu_618_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z4_m_1_fu_2454_p2),79));
    mul_ln277_fu_622_p0 <= mul_ln277_fu_622_p00(49 - 1 downto 0);
    mul_ln277_fu_622_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2_m_1_fu_2529_p4),93));
    mul_ln277_fu_622_p1 <= mul_ln277_fu_622_p10(44 - 1 downto 0);
    mul_ln277_fu_622_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_fu_2513_p2),93));
    mul_ln44_1_fu_634_p0 <= mul_ln44_1_fu_634_p00(73 - 1 downto 0);
    mul_ln44_1_fu_634_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_reg_3036),79));
    mul_ln44_1_fu_634_p1 <= mul_ln44_1_fu_634_p10(6 - 1 downto 0);
    mul_ln44_1_fu_634_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_1_reg_3042),79));
    mul_ln44_2_fu_650_p0 <= mul_ln44_2_fu_650_p00(83 - 1 downto 0);
    mul_ln44_2_fu_650_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z3_fu_961_p3),89));
    mul_ln44_2_fu_650_p1 <= mul_ln44_2_fu_650_p10(6 - 1 downto 0);
    mul_ln44_2_fu_650_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_2_reg_3058),89));
    mul_ln44_3_fu_658_p0 <= mul_ln44_3_fu_658_p00(92 - 1 downto 0);
    mul_ln44_3_fu_658_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z4_reg_3069),97));
    mul_ln44_3_fu_658_p1 <= mul_ln44_3_fu_658_p10(6 - 1 downto 0);
    mul_ln44_3_fu_658_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_3080),97));
    mul_ln44_4_fu_654_p0 <= mul_ln44_4_fu_654_p00(87 - 1 downto 0);
    mul_ln44_4_fu_654_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_reg_3086),92));
    mul_ln44_4_fu_654_p1 <= mul_ln44_4_fu_654_p10(6 - 1 downto 0);
    mul_ln44_4_fu_654_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_3097),92));
    mul_ln44_5_fu_646_p0 <= mul_ln44_5_fu_646_p00(82 - 1 downto 0);
    mul_ln44_5_fu_646_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_3103),87));
    mul_ln44_5_fu_646_p1 <= mul_ln44_5_fu_646_p10(6 - 1 downto 0);
    mul_ln44_5_fu_646_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_reg_3114),87));
    mul_ln44_6_fu_638_p0 <= mul_ln44_6_fu_638_p00(77 - 1 downto 0);
    mul_ln44_6_fu_638_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_reg_3120),82));
    mul_ln44_6_fu_638_p1 <= mul_ln44_6_fu_638_p10(6 - 1 downto 0);
    mul_ln44_6_fu_638_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_reg_3131),82));
    mul_ln44_fu_843_p0 <= zext_ln42_1_fu_800_p1(71 - 1 downto 0);
    mul_ln44_fu_843_p1 <= mul_ln44_fu_843_p10(4 - 1 downto 0);
    mul_ln44_fu_843_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_reg_3020),75));
    mul_ln516_fu_630_p0 <= 
        zext_ln485_fu_735_p1 when (tmp_5_reg_2987(0) = '1') else 
        b_frac_fu_719_p4;
    mul_ln516_fu_630_p1 <= mul_ln516_fu_630_p10(6 - 1 downto 0);
    mul_ln516_fu_630_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_q0),54));
    mul_ln522_fu_614_p0 <= zext_ln522_fu_1566_p1(40 - 1 downto 0);
    mul_ln522_fu_614_p1 <= zext_ln522_fu_1566_p1(40 - 1 downto 0);
    mul_ln616_fu_626_p0 <= mul_ln616_fu_626_p00(50 - 1 downto 0);
    mul_ln616_fu_626_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_reg_3395),99));
    mul_ln616_fu_626_p1 <= mul_ln616_fu_626_p10(50 - 1 downto 0);
    mul_ln616_fu_626_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_fu_2603_p4),99));
    or_ln357_fu_1741_p2 <= (x_is_inf_fu_1737_p2 or x_is_0_reg_3199);
    or_ln373_fu_1809_p2 <= (tmp_1_fu_1763_p3 or icmp_ln372_fu_1757_p2);
    or_ln378_1_fu_1861_p2 <= (y_is_0_fu_1683_p2 or or_ln378_fu_1855_p2);
    or_ln378_fu_1855_p2 <= (x_is_p1_fu_1694_p2 or and_ln378_fu_1849_p2);
    or_ln386_1_fu_1885_p2 <= (x_is_NaN_fu_1733_p2 or and_ln386_fu_1879_p2);
    or_ln386_2_fu_1891_p2 <= (y_is_NaN_fu_1727_p2 or or_ln386_1_fu_1885_p2);
    or_ln386_3_fu_2789_p2 <= (or_ln386_2_reg_3259_pp0_iter18_reg or or_ln378_1_reg_3252_pp0_iter18_reg);
    or_ln386_fu_1867_p2 <= (y_is_int_fu_1829_p9 or y_is_inf_fu_1715_p2);
    or_ln431_1_fu_1966_p2 <= (or_ln431_fu_1960_p2 or and_ln431_3_fu_1955_p2);
    or_ln431_2_fu_1972_p2 <= (or_ln431_1_fu_1966_p2 or and_ln431_1_fu_1944_p2);
    or_ln431_fu_1960_p2 <= (and_ln431_fu_1938_p2 or and_ln431_2_fu_1949_p2);
    or_ln438_1_fu_2006_p2 <= (or_ln438_fu_2000_p2 or and_ln438_3_fu_1994_p2);
    or_ln438_2_fu_2012_p2 <= (or_ln438_1_fu_2006_p2 or and_ln438_fu_1978_p2);
    or_ln438_fu_2000_p2 <= (and_ln438_2_fu_1989_p2 or and_ln438_1_fu_1983_p2);
    or_ln628_fu_2767_p2 <= (icmp_ln628_1_reg_3400 or and_ln628_fu_2763_p2);
    out_exp_fu_2772_p2 <= std_logic_vector(unsigned(trunc_ln657_reg_3415) + unsigned(ap_const_lv11_3FF));
    out_sig_fu_2708_p3 <= 
        tmp_3_fu_2688_p4 when (tmp_28_fu_2646_p3(0) = '1') else 
        tmp_12_fu_2698_p4;
    pow_reduce_anonymous_namespace_log0_lut_table_array_address0 <= zext_ln502_reg_2993_pp0_iter7_reg(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log0_lut_table_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log0_lut_table_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log0_lut_table_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_address0 <= zext_ln502_fu_704_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_inverse_lut_table_pow_0_5_64_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_address0 <= zext_ln46_2_fu_1330_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_address0 <= zext_ln46_3_fu_1334_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_address0 <= zext_ln46_4_fu_1338_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_address0 <= zext_ln46_5_fu_1342_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_address0 <= zext_ln46_6_fu_1404_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_address0 <= zext_ln46_fu_1322_p1(4 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_address0 <= zext_ln46_1_fu_1326_p1(6 - 1 downto 0);

    pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_address0 <= zext_ln611_fu_2503_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter17, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_address0 <= zext_ln273_fu_2499_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter16, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_address0 <= zext_ln254_fu_2432_p1(8 - 1 downto 0);
    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_address1 <= zext_ln249_fu_2427_p1(8 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter15, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter15, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_ce1_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_array_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    r_exp_1_fu_2654_p2 <= std_logic_vector(signed(r_exp_reg_3336_pp0_iter17_reg) + signed(ap_const_lv13_1FFF));
    r_exp_2_fu_2659_p3 <= 
        r_exp_reg_3336_pp0_iter17_reg when (tmp_28_fu_2646_p3(0) = '1') else 
        r_exp_1_fu_2654_p2;
    r_exp_fu_2356_p3 <= 
        select_ln563_fu_2348_p3 when (tmp_24_fu_2326_p3(0) = '1') else 
        tmp_9_cast_fu_2317_p4;
    r_sign_fu_2121_p2 <= (y_is_odd_1_fu_2102_p9 and x_is_neg_reg_3239);
    retval_2_fu_2905_p18 <= t_3_fu_2777_p4;
    retval_2_fu_2905_p19 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    retval_2_fu_2905_p20 <= (((((((or_ln378_1_reg_3252_pp0_iter18_reg & and_ln342_fu_2799_p2) & and_ln386_1_fu_2809_p2) & and_ln431_4_fu_2825_p2) & and_ln438_4_fu_2836_p2) & and_ln629_fu_2853_p2) & and_ln629_1_fu_2863_p2) & and_ln645_1_fu_2880_p2);
    retval_2_fu_2905_p4 <= t_fu_2720_p3;
    select_ln42_fu_816_p3 <= 
        tmp_4_fu_804_p3 when (tmp_6_reg_3031(0) = '1') else 
        zext_ln42_2_fu_812_p1;
    select_ln545_fu_2135_p3 <= 
        sext_ln545_fu_2131_p1 when (tmp_1_reg_3244(0) = '1') else 
        m_exp_reg_3223;
    select_ln553_1_fu_2242_p3 <= 
        shl_ln553_fu_2232_p2 when (tmp_22_fu_2209_p3(0) = '1') else 
        ashr_ln553_fu_2237_p2;
    select_ln553_fu_2217_p3 <= 
        m_exp_reg_3223 when (tmp_22_fu_2209_p3(0) = '1') else 
        sext_ln545_fu_2131_p1;
    select_ln563_fu_2348_p3 <= 
        add_ln563_1_fu_2342_p2 when (icmp_ln563_fu_2336_p2(0) = '1') else 
        tmp_9_cast_fu_2317_p4;
        sext_ln525_1_fu_1620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(log_sum_1_fu_1560_p2),121));

        sext_ln525_fu_1616_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_fu_1608_p3),121));

        sext_ln545_1_fu_2141_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln545_fu_2135_p3),32));

        sext_ln545_fu_2131_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln545_fu_2126_p2),12));

        sext_ln552_fu_2197_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_exp_reg_3223),32));

        sext_ln553_fu_2224_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln553_fu_2217_p3),32));

        sext_ln628_fu_2297_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_fix_back_fu_2190_p3),131));

    shl_ln1_fu_1581_p3 <= (tmp_20_reg_3177 & ap_const_lv45_0);
    shl_ln2_fu_1608_p3 <= (Elog2_fu_604_p2 & ap_const_lv30_0);
    shl_ln3_fu_2306_p3 <= (tmp_23_reg_3316_pp0_iter12_reg & ap_const_lv18_20000);
    shl_ln44_10_fu_1357_p3 <= (tmp_18_reg_3126 & ap_const_lv64_0);
    shl_ln44_11_fu_1386_p3 <= (mul_ln44_6_fu_638_p2 & ap_const_lv26_0);
    shl_ln44_1_fu_900_p3 <= (tmp_7_reg_3048 & ap_const_lv14_0);
    shl_ln44_2_fu_929_p3 <= (mul_ln44_1_fu_634_p2 & ap_const_lv1_0);
    shl_ln44_3_fu_1274_p3 <= (mul_ln44_5_fu_646_p2 & ap_const_lv21_0);
    shl_ln44_4_fu_980_p3 <= (trunc_ln39_1_reg_3064 & ap_const_lv25_0);
    shl_ln44_5_fu_1010_p3 <= (mul_ln44_2_fu_650_p2 & ap_const_lv6_0);
    shl_ln44_6_fu_1069_p3 <= (tmp_8_reg_3075 & ap_const_lv34_0);
    shl_ln44_7_fu_1098_p3 <= (mul_ln44_3_fu_658_p2 & ap_const_lv11_0);
    shl_ln44_8_fu_1157_p3 <= (tmp_11_reg_3092 & ap_const_lv44_0);
    shl_ln44_9_fu_1186_p3 <= (mul_ln44_4_fu_654_p2 & ap_const_lv16_0);
    shl_ln44_s_fu_1245_p3 <= (tmp_15_reg_3109 & ap_const_lv54_0);
    shl_ln4_fu_2628_p3 <= (add_ln616_fu_2613_p2 & ap_const_lv49_0);
    shl_ln545_fu_2154_p2 <= std_logic_vector(shift_left(unsigned(m_frac_l_reg_3282),to_integer(unsigned('0' & zext_ln545_fu_2145_p1(31-1 downto 0)))));
    shl_ln546_fu_2178_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_fu_2167_p3),to_integer(unsigned('0' & zext_ln546_fu_2174_p1(31-1 downto 0)))));
    shl_ln552_fu_2204_p2 <= std_logic_vector(shift_left(unsigned(m_frac_l_reg_3282),to_integer(unsigned('0' & zext_ln552_fu_2200_p1(31-1 downto 0)))));
    shl_ln553_fu_2232_p2 <= std_logic_vector(shift_left(unsigned(m_frac_l_reg_3282),to_integer(unsigned('0' & zext_ln553_fu_2228_p1(31-1 downto 0)))));
    shl_ln_fu_823_p3 <= (trunc_ln39_reg_3026 & ap_const_lv25_0);
    sub_ln422_fu_1920_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln486_1_fu_1673_p1));
    sub_ln44_1_fu_941_p2 <= std_logic_vector(unsigned(add_ln44_1_fu_915_p2) - unsigned(zext_ln44_7_fu_937_p1));
    sub_ln44_2_fu_1022_p2 <= std_logic_vector(unsigned(add_ln44_2_fu_995_p2) - unsigned(zext_ln44_12_fu_1018_p1));
    sub_ln44_3_fu_1110_p2 <= std_logic_vector(unsigned(add_ln44_3_fu_1084_p2) - unsigned(zext_ln44_17_fu_1106_p1));
    sub_ln44_4_fu_1198_p2 <= std_logic_vector(unsigned(add_ln44_4_fu_1172_p2) - unsigned(zext_ln44_22_fu_1194_p1));
    sub_ln44_5_fu_1286_p2 <= std_logic_vector(unsigned(add_ln44_5_fu_1260_p2) - unsigned(zext_ln44_27_fu_1282_p1));
    sub_ln44_6_fu_1398_p2 <= std_logic_vector(unsigned(add_ln44_6_fu_1372_p2) - unsigned(zext_ln44_32_fu_1394_p1));
    sub_ln44_fu_853_p2 <= std_logic_vector(unsigned(add_ln44_fu_834_p2) - unsigned(zext_ln44_2_fu_849_p1));
    sub_ln522_fu_1592_p2 <= std_logic_vector(unsigned(shl_ln1_fu_1581_p3) - unsigned(zext_ln522_1_fu_1588_p1));
    sub_ln545_fu_2126_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(es_exp_reg_3218));
    sub_ln574_fu_2378_p2 <= std_logic_vector(unsigned(m_fix_reg_3311_pp0_iter14_reg) - unsigned(m_fix_a_fu_2368_p4));
    t_1_fu_2741_p3 <= (r_sign_reg_3303_pp0_iter18_reg & ap_const_lv63_7FF0000000000000);
    t_2_fu_2752_p3 <= (r_sign_reg_3303_pp0_iter18_reg & ap_const_lv63_0);
    t_3_fu_2777_p4 <= ((r_sign_reg_3303_pp0_iter18_reg & out_exp_fu_2772_p2) & out_sig_reg_3410);
    t_fu_2720_p3 <= (r_sign_reg_3303_pp0_iter18_reg & ap_const_lv63_3FF0000000000000);
    tmp_12_fu_2698_p4 <= add_ln616_1_fu_2640_p2(104 downto 53);
    tmp_1_fu_1763_p3 <= m_exp_fu_1677_p2(11 downto 11);
    tmp_22_fu_2209_p3 <= sub_ln545_fu_2126_p2(10 downto 10);
    tmp_24_fu_2326_p3 <= grp_fu_2949_p3(30 downto 30);
    tmp_25_fu_2479_p4 <= mul_ln258_fu_618_p2(78 downto 59);
    tmp_26_fu_2519_p4 <= pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_q0(41 downto 2);
    tmp_27_fu_2563_p4 <= mul_ln277_fu_622_p2(92 downto 57);
    tmp_28_fu_2646_p3 <= add_ln616_1_fu_2640_p2(106 downto 106);
    tmp_29_fu_2666_p4 <= r_exp_2_fu_2659_p3(12 downto 10);
    tmp_3_fu_2688_p4 <= add_ln616_1_fu_2640_p2(105 downto 54);
    tmp_4_fu_804_p3 <= (ap_const_lv1_1 & zext_ln42_1_fu_800_p1);
    tmp_9_cast_fu_2317_p4 <= grp_fu_2949_p3(30 downto 18);
    tmp_s_fu_781_p3 <= (mul_ln516_reg_3014 & ap_const_lv16_0);
    trunc_ln39_1_fu_957_p1 <= sub_ln44_1_fu_941_p2(76 - 1 downto 0);
    trunc_ln39_fu_762_p1 <= mul_ln516_fu_630_p2(50 - 1 downto 0);
    trunc_ln545_1_fu_2163_p1 <= shl_ln545_fu_2154_p2(130 - 1 downto 0);
    trunc_ln545_fu_2159_p1 <= ashr_ln545_fu_2149_p2(130 - 1 downto 0);
    trunc_ln563_fu_2333_p1 <= grp_fu_2949_p3(18 - 1 downto 0);
    trunc_ln657_fu_2716_p1 <= r_exp_2_fu_2659_p3(11 - 1 downto 0);
    x_abs_greater_1_fu_1915_p2 <= (tmp_2_reg_3206 xor ap_const_lv1_1);
    x_is_0_fu_1453_p2 <= "1" when (bs_exp_reg_2965_pp0_iter8_reg = ap_const_lv11_0) else "0";
    x_is_1_fu_1443_p2 <= (icmp_ln340_fu_1437_p2 and icmp_ln340_1_reg_3003_pp0_iter8_reg);
    x_is_NaN_fu_1733_p2 <= (icmp_ln18_4_reg_3009_pp0_iter9_reg and icmp_ln18_3_reg_3193);
    x_is_inf_fu_1737_p2 <= (icmp_ln340_1_reg_3003_pp0_iter9_reg and icmp_ln18_3_reg_3193);
    x_is_n1_fu_1699_p2 <= (x_is_1_reg_3187 and tmp_reg_2980_pp0_iter9_reg);
    x_is_neg_fu_1752_p2 <= (xor_ln357_fu_1746_p2 and tmp_reg_2980_pp0_iter9_reg);
    x_is_p1_fu_1694_p2 <= (xor_ln341_fu_1689_p2 and x_is_1_reg_3187);
    xor_ln341_fu_1689_p2 <= (tmp_reg_2980_pp0_iter9_reg xor ap_const_lv1_1);
    xor_ln342_fu_2814_p2 <= (x_is_n1_reg_3233_pp0_iter18_reg xor ap_const_lv1_1);
    xor_ln357_fu_1746_p2 <= (or_ln357_fu_1741_p2 xor ap_const_lv1_1);
    xor_ln373_fu_1815_p2 <= (or_ln373_fu_1809_p2 xor ap_const_lv1_1);
    xor_ln386_1_fu_2793_p2 <= (or_ln386_3_fu_2789_p2 xor ap_const_lv1_1);
    xor_ln386_2_fu_2804_p2 <= (or_ln378_1_reg_3252_pp0_iter18_reg xor ap_const_lv1_1);
    xor_ln386_fu_1873_p2 <= (or_ln386_fu_1867_p2 xor ap_const_lv1_1);
    xor_ln421_fu_2076_p2 <= (icmp_ln421_fu_2061_p2 xor ap_const_lv1_1);
    xor_ln431_fu_2731_p2 <= (or_ln431_2_reg_3270_pp0_iter18_reg xor ap_const_lv1_1);
    xor_ln438_fu_2736_p2 <= (or_ln438_2_reg_3276_pp0_iter18_reg xor ap_const_lv1_1);
    xor_ln628_fu_2869_p2 <= (or_ln628_fu_2767_p2 xor ap_const_lv1_1);
    xor_ln629_fu_2858_p2 <= (tmp_30_reg_3292_pp0_iter18_reg xor ap_const_lv1_1);
    y_is_0_fu_1683_p2 <= "1" when (es_exp_fu_1661_p3 = ap_const_lv11_0) else "0";
    y_is_NaN_fu_1727_p2 <= (icmp_ln18_fu_1703_p2 and icmp_ln18_2_fu_1721_p2);
    y_is_inf_fu_1715_p2 <= (icmp_ln18_fu_1703_p2 and icmp_ln18_1_fu_1709_p2);
    y_is_int_fu_1829_p4 <= "1" when (and_ln373_1_fu_1797_p2 = ap_const_lv52_0) else "0";
    y_is_int_fu_1829_p7 <= "X";
    y_is_int_fu_1829_p8 <= (icmp_ln372_fu_1757_p2 & xor_ln373_fu_1815_p2);
    y_is_ninf_fu_1909_p2 <= (y_is_inf_fu_1715_p2 and es_sign_fu_1653_p3);
    y_is_odd_1_fu_2102_p7 <= "X";
    y_is_odd_1_fu_2102_p8 <= (icmp_ln421_fu_2061_p2 & and_ln422_1_fu_2088_p2);
        y_is_odd_fu_1930_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln422_fu_1920_p2),32));

    y_is_pinf_fu_1903_p2 <= (y_is_pos_fu_1897_p2 and y_is_inf_fu_1715_p2);
    y_is_pos_fu_1897_p2 <= (es_sign_fu_1653_p3 xor ap_const_lv1_1);
    z1_fu_774_p3 <= (mul_ln516_reg_3014 & ap_const_lv17_0);
    z3_fu_961_p3 <= (sub_ln44_1_reg_3053 & ap_const_lv1_0);
    zext_ln194_1_fu_1488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_7_6_64_array_q0),103));
    zext_ln194_2_fu_1492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_12_6_64_array_q0),103));
    zext_ln194_3_fu_1496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_17_6_64_array_q0),93));
    zext_ln194_4_fu_1500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_22_6_64_array_q0),93));
    zext_ln194_5_fu_1504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_27_6_64_array_q0),83));
    zext_ln194_6_fu_1508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_32_6_64_array_q0),83));
    zext_ln194_fu_1484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_log_lut_table_ap_fixed_4_4_16_array_q0),109));
    zext_ln209_1_fu_1546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln209_4_fu_1540_p2),93));
    zext_ln209_2_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln209_5_fu_1550_p2),109));
    zext_ln209_fu_1524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln209_1_fu_1518_p2),109));
    zext_ln249_fu_2427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_fu_2417_p4),64));
    zext_ln250_1_fu_2450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_Z4_fu_2437_p4),36));
    zext_ln250_fu_2447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_reg_3360),36));
    zext_ln254_fu_2432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_fu_2403_p4),64));
    zext_ln255_fu_2507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z3_m_1_reg_3375),44));
    zext_ln261_1_fu_2489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_2479_p4),36));
    zext_ln261_fu_2510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln261_reg_3380),44));
    zext_ln273_fu_2499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_reg_3348),64));
    zext_ln280_1_fu_2583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln280_fu_2577_p2),52));
    zext_ln280_2_fu_2573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_2563_p4),44));
    zext_ln280_fu_2559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_2548_p5),52));
    zext_ln373_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln373_fu_1781_p2),52));
    zext_ln40_1_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z3_fu_961_p3),95));
    zext_ln40_2_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z4_reg_3069),109));
    zext_ln40_3_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_reg_3086),109));
    zext_ln40_4_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_3103),109));
    zext_ln40_5_fu_1346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_reg_3120),109));
    zext_ln40_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_reg_3036),80));
    zext_ln42_1_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_fu_774_p3),75));
    zext_ln42_2_cast_fu_792_p3 <= (ap_const_lv1_1 & zext_ln42_fu_788_p1);
    zext_ln42_2_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln42_2_cast_fu_792_p3),76));
    zext_ln42_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_781_p3),74));
    zext_ln44_12_fu_1018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_5_fu_1010_p3),102));
    zext_ln44_13_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_6_fu_1069_p3),121));
    zext_ln44_14_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_2_fu_1061_p3),121));
    zext_ln44_17_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_7_fu_1098_p3),121));
    zext_ln44_18_fu_1164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_8_fu_1157_p3),126));
    zext_ln44_19_fu_1168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_3_fu_1149_p3),126));
    zext_ln44_22_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_9_fu_1186_p3),126));
    zext_ln44_23_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_s_fu_1245_p3),131));
    zext_ln44_24_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_4_fu_1237_p3),131));
    zext_ln44_27_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_3_fu_1274_p3),131));
    zext_ln44_28_fu_1364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_10_fu_1357_p3),136));
    zext_ln44_29_fu_1368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_5_fu_1349_p3),136));
    zext_ln44_2_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln44_fu_843_p2),76));
    zext_ln44_32_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_11_fu_1386_p3),136));
    zext_ln44_3_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_1_fu_900_p3),82));
    zext_ln44_4_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_fu_892_p3),82));
    zext_ln44_7_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_2_fu_929_p3),82));
    zext_ln44_8_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln44_4_fu_980_p3),102));
    zext_ln44_9_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_1_fu_972_p3),102));
    zext_ln44_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_823_p3),76));
    zext_ln46_1_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_1_reg_3042_pp0_iter7_reg),64));
    zext_ln46_2_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_2_reg_3058_pp0_iter7_reg),64));
    zext_ln46_3_fu_1334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_3080_pp0_iter7_reg),64));
    zext_ln46_4_fu_1338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_3097_pp0_iter7_reg),64));
    zext_ln46_5_fu_1342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_reg_3114_pp0_iter7_reg),64));
    zext_ln46_6_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_reg_3131),64));
    zext_ln46_fu_1322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_reg_3020_pp0_iter7_reg),64));
    zext_ln485_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_frac_1_fu_728_p3),54));
    zext_ln486_1_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(es_exp_fu_1661_p3),12));
    zext_ln486_fu_1428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bs_exp_reg_2965_pp0_iter8_reg),12));
    zext_ln502_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index0_fu_694_p4),64));
    zext_ln522_1_fu_1588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1571_p4),117));
    zext_ln522_fu_1566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_reg_3182),79));
    zext_ln525_fu_1630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln522_1_fu_1598_p4),121));
    zext_ln532_fu_2026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(e_frac_fu_2018_p3),54));
    zext_ln545_fu_2145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln545_1_fu_2141_p1),131));
    zext_ln546_fu_2174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln545_1_fu_2141_p1),130));
    zext_ln549_fu_2261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_2257_p1),131));
    zext_ln552_fu_2200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln552_fu_2197_p1),131));
    zext_ln553_fu_2228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln553_fu_2224_p1),131));
    zext_ln611_fu_2503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_reg_3343_pp0_iter16_reg),64));
    zext_ln616_2_fu_2636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln616_fu_626_p2),107));
end behav;
