// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module SABR_SABR_Pipeline_VITIS_LOOP_12_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY,
        m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY,
        m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY,
        m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID,
        m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA,
        m_axi_gmem_0_RLAST,
        m_axi_gmem_0_RID,
        m_axi_gmem_0_RFIFONUM,
        m_axi_gmem_0_RUSER,
        m_axi_gmem_0_RRESP,
        m_axi_gmem_0_BVALID,
        m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP,
        m_axi_gmem_0_BID,
        m_axi_gmem_0_BUSER,
        empty_75,
        empty,
        sext_ln12,
        trunc_ln12_1_cast
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_0_AWVALID;
input   m_axi_gmem_0_AWREADY;
output  [63:0] m_axi_gmem_0_AWADDR;
output  [0:0] m_axi_gmem_0_AWID;
output  [31:0] m_axi_gmem_0_AWLEN;
output  [2:0] m_axi_gmem_0_AWSIZE;
output  [1:0] m_axi_gmem_0_AWBURST;
output  [1:0] m_axi_gmem_0_AWLOCK;
output  [3:0] m_axi_gmem_0_AWCACHE;
output  [2:0] m_axi_gmem_0_AWPROT;
output  [3:0] m_axi_gmem_0_AWQOS;
output  [3:0] m_axi_gmem_0_AWREGION;
output  [0:0] m_axi_gmem_0_AWUSER;
output   m_axi_gmem_0_WVALID;
input   m_axi_gmem_0_WREADY;
output  [255:0] m_axi_gmem_0_WDATA;
output  [31:0] m_axi_gmem_0_WSTRB;
output   m_axi_gmem_0_WLAST;
output  [0:0] m_axi_gmem_0_WID;
output  [0:0] m_axi_gmem_0_WUSER;
output   m_axi_gmem_0_ARVALID;
input   m_axi_gmem_0_ARREADY;
output  [63:0] m_axi_gmem_0_ARADDR;
output  [0:0] m_axi_gmem_0_ARID;
output  [31:0] m_axi_gmem_0_ARLEN;
output  [2:0] m_axi_gmem_0_ARSIZE;
output  [1:0] m_axi_gmem_0_ARBURST;
output  [1:0] m_axi_gmem_0_ARLOCK;
output  [3:0] m_axi_gmem_0_ARCACHE;
output  [2:0] m_axi_gmem_0_ARPROT;
output  [3:0] m_axi_gmem_0_ARQOS;
output  [3:0] m_axi_gmem_0_ARREGION;
output  [0:0] m_axi_gmem_0_ARUSER;
input   m_axi_gmem_0_RVALID;
output   m_axi_gmem_0_RREADY;
input  [255:0] m_axi_gmem_0_RDATA;
input   m_axi_gmem_0_RLAST;
input  [0:0] m_axi_gmem_0_RID;
input  [8:0] m_axi_gmem_0_RFIFONUM;
input  [0:0] m_axi_gmem_0_RUSER;
input  [1:0] m_axi_gmem_0_RRESP;
input   m_axi_gmem_0_BVALID;
output   m_axi_gmem_0_BREADY;
input  [1:0] m_axi_gmem_0_BRESP;
input  [0:0] m_axi_gmem_0_BID;
input  [0:0] m_axi_gmem_0_BUSER;
input  [63:0] empty_75;
input  [63:0] empty;
input  [58:0] sext_ln12;
input  [58:0] trunc_ln12_1_cast;

reg ap_idle;
reg m_axi_gmem_0_AWVALID;
reg[63:0] m_axi_gmem_0_AWADDR;
reg m_axi_gmem_0_WVALID;
reg[255:0] m_axi_gmem_0_WDATA;
reg m_axi_gmem_0_BREADY;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln12_reg_360;
reg   [0:0] icmp_ln13_reg_364;
reg    ap_predicate_op104_writereq_state2;
reg    ap_block_state2_io_grp1;
reg    ap_block_pp0_stage1_subdone_grp1_done_reg;
reg    ap_block_pp0_stage1_subdone_grp1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter1_reg;
reg    ap_block_state4_io_grp4;
reg    ap_block_pp0_stage1_subdone_grp4_done_reg;
reg    ap_block_pp0_stage1_subdone_grp4;
reg   [0:0] icmp_ln13_reg_364_pp0_iter35_reg;
reg    ap_block_state72_pp0_stage1_iter35_grp6;
reg    ap_block_pp0_stage1_subdone_grp6_done_reg;
reg    ap_block_pp0_stage1_subdone_grp6;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AW;
wire    ap_block_pp0_stage1_grp1;
reg    gmem_blk_n_W;
wire    ap_block_pp0_stage0_grp2;
reg    ap_block_pp0_stage0_subdone_grp2_done_reg;
reg    ap_block_pp0_stage0_subdone_grp2;
reg    ap_block_pp0_stage0_subdone;
reg    gmem_blk_n_B;
wire    ap_block_pp0_stage0_grp5;
reg   [0:0] icmp_ln13_reg_364_pp0_iter34_reg;
reg    ap_block_pp0_stage0_subdone_grp5_done_reg;
reg    ap_block_pp0_stage0_subdone_grp5;
wire    ap_block_pp0_stage0_grp3;
reg    ap_block_pp0_stage0_subdone_grp3_done_reg;
reg    ap_block_pp0_stage0_subdone_grp3;
wire    ap_block_pp0_stage1_grp4;
wire    ap_block_pp0_stage1_grp6;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_state3_io_grp2;
reg    ap_block_pp0_stage0_11001_grp2;
wire   [0:0] icmp_ln12_fu_178_p2;
reg    ap_block_state3_io_grp3;
reg    ap_block_state71_pp0_stage0_iter35_grp5;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln13_fu_208_p2;
reg   [0:0] icmp_ln13_reg_364_pp0_iter2_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter3_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter4_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter5_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter6_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter7_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter8_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter9_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter10_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter11_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter12_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter13_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter14_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter15_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter16_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter17_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter18_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter19_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter20_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter21_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter22_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter23_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter24_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter25_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter26_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter27_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter28_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter29_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter30_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter31_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter32_reg;
reg   [0:0] icmp_ln13_reg_364_pp0_iter33_reg;
wire   [59:0] add_ln13_fu_214_p2;
reg   [59:0] add_ln13_reg_370;
wire   [59:0] add_ln14_fu_220_p2;
reg   [59:0] add_ln14_reg_375;
reg    ap_block_pp0_stage1_11001_grp1;
reg    ap_block_pp0_stage0_11001_grp3;
wire  signed [63:0] sext_ln13_fu_231_p1;
wire  signed [63:0] sext_ln14_fu_259_p1;
reg    ap_block_pp0_stage0_11001_grp5;
wire   [255:0] or_ln_fu_244_p3;
wire    ap_block_pp0_stage0_01001_grp2;
reg    ap_block_pp0_stage1_11001_grp6;
reg    ap_block_pp0_stage1_11001_grp4;
wire   [255:0] or_ln1_fu_287_p3;
wire    ap_block_pp0_stage1_01001_grp4;
reg   [191:0] phi_ln14_fu_84;
wire   [191:0] select_ln14_fu_315_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage0_grp0;
reg   [191:0] phi_ln13_fu_88;
reg   [6:0] m_fu_92;
wire   [6:0] add_ln12_fu_184_p2;
reg   [6:0] ap_sig_allocacmp_m_2;
wire    ap_block_pp0_stage0;
wire   [4:0] lshr_ln_fu_194_p4;
wire   [1:0] trunc_ln12_fu_190_p1;
wire   [59:0] zext_ln13_fu_204_p1;
wire  signed [59:0] sext_ln12_cast_fu_156_p1;
wire  signed [59:0] trunc_ln12_1_cast_cast_fu_152_p1;
wire   [255:0] select_ln13_fu_252_p3;
wire   [127:0] tmp_110_fu_298_p4;
wire   [191:0] tmp_s_fu_308_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_block_pp0_stage1_11001;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to35;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_842;
reg    ap_condition_847;
reg    ap_condition_353;
reg    ap_condition_341;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp1_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp4_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp6_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp2_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp5_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp3_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 phi_ln14_fu_84 = 192'd0;
#0 phi_ln13_fu_88 = 192'd0;
#0 m_fu_92 = 7'd0;
#0 ap_done_reg = 1'b0;
end

SABR_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp2_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp2_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp2)) begin
                ap_block_pp0_stage0_subdone_grp2_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp3_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp3_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp3)) begin
                ap_block_pp0_stage0_subdone_grp3_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp5_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp5_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp5)) begin
                ap_block_pp0_stage0_subdone_grp5_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp1)) begin
                ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp4_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp4_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp4)) begin
                ap_block_pp0_stage1_subdone_grp4_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp6_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp6_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp6)) begin
                ap_block_pp0_stage1_subdone_grp6_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter34_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln12_fu_178_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            m_fu_92 <= add_ln12_fu_184_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            m_fu_92 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_353)) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_ln13_fu_88 <= 192'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_ln13_fu_88 <= {{select_ln13_fu_252_p3[255:64]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_341)) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_ln14_fu_84 <= 192'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            phi_ln14_fu_84 <= select_ln14_fu_315_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln13_reg_370 <= add_ln13_fu_214_p2;
        add_ln14_reg_375 <= add_ln14_fu_220_p2;
        icmp_ln12_reg_360 <= icmp_ln12_fu_178_p2;
        icmp_ln13_reg_364 <= icmp_ln13_fu_208_p2;
        icmp_ln13_reg_364_pp0_iter10_reg <= icmp_ln13_reg_364_pp0_iter9_reg;
        icmp_ln13_reg_364_pp0_iter11_reg <= icmp_ln13_reg_364_pp0_iter10_reg;
        icmp_ln13_reg_364_pp0_iter12_reg <= icmp_ln13_reg_364_pp0_iter11_reg;
        icmp_ln13_reg_364_pp0_iter13_reg <= icmp_ln13_reg_364_pp0_iter12_reg;
        icmp_ln13_reg_364_pp0_iter14_reg <= icmp_ln13_reg_364_pp0_iter13_reg;
        icmp_ln13_reg_364_pp0_iter15_reg <= icmp_ln13_reg_364_pp0_iter14_reg;
        icmp_ln13_reg_364_pp0_iter16_reg <= icmp_ln13_reg_364_pp0_iter15_reg;
        icmp_ln13_reg_364_pp0_iter17_reg <= icmp_ln13_reg_364_pp0_iter16_reg;
        icmp_ln13_reg_364_pp0_iter18_reg <= icmp_ln13_reg_364_pp0_iter17_reg;
        icmp_ln13_reg_364_pp0_iter19_reg <= icmp_ln13_reg_364_pp0_iter18_reg;
        icmp_ln13_reg_364_pp0_iter1_reg <= icmp_ln13_reg_364;
        icmp_ln13_reg_364_pp0_iter20_reg <= icmp_ln13_reg_364_pp0_iter19_reg;
        icmp_ln13_reg_364_pp0_iter21_reg <= icmp_ln13_reg_364_pp0_iter20_reg;
        icmp_ln13_reg_364_pp0_iter22_reg <= icmp_ln13_reg_364_pp0_iter21_reg;
        icmp_ln13_reg_364_pp0_iter23_reg <= icmp_ln13_reg_364_pp0_iter22_reg;
        icmp_ln13_reg_364_pp0_iter24_reg <= icmp_ln13_reg_364_pp0_iter23_reg;
        icmp_ln13_reg_364_pp0_iter25_reg <= icmp_ln13_reg_364_pp0_iter24_reg;
        icmp_ln13_reg_364_pp0_iter26_reg <= icmp_ln13_reg_364_pp0_iter25_reg;
        icmp_ln13_reg_364_pp0_iter27_reg <= icmp_ln13_reg_364_pp0_iter26_reg;
        icmp_ln13_reg_364_pp0_iter28_reg <= icmp_ln13_reg_364_pp0_iter27_reg;
        icmp_ln13_reg_364_pp0_iter29_reg <= icmp_ln13_reg_364_pp0_iter28_reg;
        icmp_ln13_reg_364_pp0_iter2_reg <= icmp_ln13_reg_364_pp0_iter1_reg;
        icmp_ln13_reg_364_pp0_iter30_reg <= icmp_ln13_reg_364_pp0_iter29_reg;
        icmp_ln13_reg_364_pp0_iter31_reg <= icmp_ln13_reg_364_pp0_iter30_reg;
        icmp_ln13_reg_364_pp0_iter32_reg <= icmp_ln13_reg_364_pp0_iter31_reg;
        icmp_ln13_reg_364_pp0_iter33_reg <= icmp_ln13_reg_364_pp0_iter32_reg;
        icmp_ln13_reg_364_pp0_iter34_reg <= icmp_ln13_reg_364_pp0_iter33_reg;
        icmp_ln13_reg_364_pp0_iter35_reg <= icmp_ln13_reg_364_pp0_iter34_reg;
        icmp_ln13_reg_364_pp0_iter3_reg <= icmp_ln13_reg_364_pp0_iter2_reg;
        icmp_ln13_reg_364_pp0_iter4_reg <= icmp_ln13_reg_364_pp0_iter3_reg;
        icmp_ln13_reg_364_pp0_iter5_reg <= icmp_ln13_reg_364_pp0_iter4_reg;
        icmp_ln13_reg_364_pp0_iter6_reg <= icmp_ln13_reg_364_pp0_iter5_reg;
        icmp_ln13_reg_364_pp0_iter7_reg <= icmp_ln13_reg_364_pp0_iter6_reg;
        icmp_ln13_reg_364_pp0_iter8_reg <= icmp_ln13_reg_364_pp0_iter7_reg;
        icmp_ln13_reg_364_pp0_iter9_reg <= icmp_ln13_reg_364_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln12_reg_360 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter34_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) 
    & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) 
    & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to35 = 1'b1;
    end else begin
        ap_idle_pp0_1to35 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_m_2 = 7'd0;
    end else begin
        ap_sig_allocacmp_m_2 = m_fu_92;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage0_grp3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_364 == 1'd1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_grp1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op104_writereq_state2 == 1'b1)))) begin
        gmem_blk_n_AW = m_axi_gmem_0_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln13_reg_364_pp0_iter34_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage0_grp5) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter35 == 1'b1)) | ((icmp_ln13_reg_364_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_grp6) & (1'b0 == ap_block_pp0_stage1_subdone_grp6_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter35 == 1'b1)))) begin
        gmem_blk_n_B = m_axi_gmem_0_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg) & (1'b0 == ap_block_pp0_stage0_grp2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_364 == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln13_reg_364_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_grp4) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        gmem_blk_n_W = m_axi_gmem_0_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001_grp3) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_364 == 1'd1))) begin
        m_axi_gmem_0_AWADDR = sext_ln14_fu_259_p1;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001_grp1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op104_writereq_state2 == 1'b1))) begin
        m_axi_gmem_0_AWADDR = sext_ln13_fu_231_p1;
    end else begin
        m_axi_gmem_0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001_grp3) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_364 == 1'd1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001_grp1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op104_writereq_state2 == 1'b1)))) begin
        m_axi_gmem_0_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln13_reg_364_pp0_iter34_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001_grp5) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter35 == 1'b1)) | ((icmp_ln13_reg_364_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001_grp6) & (1'b0 == ap_block_pp0_stage1_subdone_grp6_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter35 == 1'b1)))) begin
        m_axi_gmem_0_BREADY = 1'b1;
    end else begin
        m_axi_gmem_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_847)) begin
            m_axi_gmem_0_WDATA = or_ln1_fu_287_p3;
        end else if ((1'b1 == ap_condition_842)) begin
            m_axi_gmem_0_WDATA = or_ln_fu_244_p3;
        end else begin
            m_axi_gmem_0_WDATA = 'bx;
        end
    end else begin
        m_axi_gmem_0_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_364 == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln13_reg_364_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001_grp4) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        m_axi_gmem_0_WVALID = 1'b1;
    end else begin
        m_axi_gmem_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to35 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln12_fu_184_p2 = (ap_sig_allocacmp_m_2 + 7'd1);

assign add_ln13_fu_214_p2 = ($signed(zext_ln13_fu_204_p1) + $signed(sext_ln12_cast_fu_156_p1));

assign add_ln14_fu_220_p2 = ($signed(zext_ln13_fu_204_p1) + $signed(trunc_ln12_1_cast_cast_fu_152_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001_grp2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b1 == ap_block_state71_pp0_stage0_iter35_grp5) & (ap_enable_reg_pp0_iter35 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg) & (1'b1 == ap_block_state3_io_grp3)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg) & (1'b1 == ap_block_state3_io_grp2)))));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp2 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg) & (1'b1 == ap_block_state3_io_grp2));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp3 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg) & (1'b1 == ap_block_state3_io_grp3));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp5 = ((1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b1 == ap_block_state71_pp0_stage0_iter35_grp5) & (ap_enable_reg_pp0_iter35 == 1'b1));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b1 == ap_block_state71_pp0_stage0_iter35_grp5) & (ap_enable_reg_pp0_iter35 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg) & (1'b1 == ap_block_state3_io_grp3)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg) & (1'b1 == ap_block_state3_io_grp2)))));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp2 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg) & (1'b1 == ap_block_state3_io_grp2));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp3 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp3_done_reg) & (1'b1 == ap_block_state3_io_grp3));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp5 = ((1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b1 == ap_block_state71_pp0_stage0_iter35_grp5) & (ap_enable_reg_pp0_iter35 == 1'b1));
end

assign ap_block_pp0_stage1_01001_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b0 == ap_block_pp0_stage1_subdone_grp6_done_reg) & (1'b1 == ap_block_state72_pp0_stage1_iter35_grp6) & (ap_enable_reg_pp0_iter35 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg) & (1'b1 == ap_block_state4_io_grp4)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_io_grp1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp1 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_io_grp1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp4 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg) & (1'b1 == ap_block_state4_io_grp4));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp6 = ((1'b0 == ap_block_pp0_stage1_subdone_grp6_done_reg) & (1'b1 == ap_block_state72_pp0_stage1_iter35_grp6) & (ap_enable_reg_pp0_iter35 == 1'b1));
end

assign ap_block_pp0_stage1_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b0 == ap_block_pp0_stage1_subdone_grp6_done_reg) & (1'b1 == ap_block_state72_pp0_stage1_iter35_grp6) & (ap_enable_reg_pp0_iter35 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg) & (1'b1 == ap_block_state4_io_grp4)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_io_grp1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp1 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_io_grp1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp4 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg) & (1'b1 == ap_block_state4_io_grp4));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp6 = ((1'b0 == ap_block_pp0_stage1_subdone_grp6_done_reg) & (1'b1 == ap_block_state72_pp0_stage1_iter35_grp6) & (ap_enable_reg_pp0_iter35 == 1'b1));
end

always @ (*) begin
    ap_block_state2_io_grp1 = ((ap_predicate_op104_writereq_state2 == 1'b1) & (m_axi_gmem_0_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_io_grp2 = ((icmp_ln13_reg_364 == 1'd1) & (m_axi_gmem_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_io_grp3 = ((icmp_ln13_reg_364 == 1'd1) & (m_axi_gmem_0_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_io_grp4 = ((icmp_ln13_reg_364_pp0_iter1_reg == 1'd1) & (m_axi_gmem_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state71_pp0_stage0_iter35_grp5 = ((icmp_ln13_reg_364_pp0_iter34_reg == 1'd1) & (m_axi_gmem_0_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state72_pp0_stage1_iter35_grp6 = ((icmp_ln13_reg_364_pp0_iter35_reg == 1'd1) & (m_axi_gmem_0_BVALID == 1'b0));
end

always @ (*) begin
    ap_condition_341 = ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_353 = ((1'b0 == ap_block_pp0_stage0_11001_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_842 = ((1'b0 == ap_block_pp0_stage0_01001_grp2) & (1'b0 == ap_block_pp0_stage0_subdone_grp2_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_364 == 1'd1));
end

always @ (*) begin
    ap_condition_847 = ((icmp_ln13_reg_364_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_01001_grp4) & (1'b0 == ap_block_pp0_stage1_subdone_grp4_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

always @ (*) begin
    ap_predicate_op104_writereq_state2 = ((icmp_ln13_reg_364 == 1'd1) & (icmp_ln12_reg_360 == 1'd0));
end

assign ap_ready = ap_ready_sig;

assign icmp_ln12_fu_178_p2 = ((ap_sig_allocacmp_m_2 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_208_p2 = ((trunc_ln12_fu_190_p1 == 2'd3) ? 1'b1 : 1'b0);

assign lshr_ln_fu_194_p4 = {{ap_sig_allocacmp_m_2[6:2]}};

assign m_axi_gmem_0_ARADDR = 64'd0;

assign m_axi_gmem_0_ARBURST = 2'd0;

assign m_axi_gmem_0_ARCACHE = 4'd0;

assign m_axi_gmem_0_ARID = 1'd0;

assign m_axi_gmem_0_ARLEN = 32'd0;

assign m_axi_gmem_0_ARLOCK = 2'd0;

assign m_axi_gmem_0_ARPROT = 3'd0;

assign m_axi_gmem_0_ARQOS = 4'd0;

assign m_axi_gmem_0_ARREGION = 4'd0;

assign m_axi_gmem_0_ARSIZE = 3'd0;

assign m_axi_gmem_0_ARUSER = 1'd0;

assign m_axi_gmem_0_ARVALID = 1'b0;

assign m_axi_gmem_0_AWBURST = 2'd0;

assign m_axi_gmem_0_AWCACHE = 4'd0;

assign m_axi_gmem_0_AWID = 1'd0;

assign m_axi_gmem_0_AWLEN = 64'd1;

assign m_axi_gmem_0_AWLOCK = 2'd0;

assign m_axi_gmem_0_AWPROT = 3'd0;

assign m_axi_gmem_0_AWQOS = 4'd0;

assign m_axi_gmem_0_AWREGION = 4'd0;

assign m_axi_gmem_0_AWSIZE = 3'd0;

assign m_axi_gmem_0_AWUSER = 1'd0;

assign m_axi_gmem_0_RREADY = 1'b0;

assign m_axi_gmem_0_WID = 1'd0;

assign m_axi_gmem_0_WLAST = 1'b0;

assign m_axi_gmem_0_WSTRB = 32'd4294967295;

assign m_axi_gmem_0_WUSER = 1'd0;

assign or_ln1_fu_287_p3 = {{empty_75}, {phi_ln14_fu_84}};

assign or_ln_fu_244_p3 = {{empty}, {phi_ln13_fu_88}};

assign select_ln13_fu_252_p3 = ((icmp_ln13_reg_364[0:0] == 1'b1) ? 256'd0 : or_ln_fu_244_p3);

assign select_ln14_fu_315_p3 = ((icmp_ln13_reg_364_pp0_iter1_reg[0:0] == 1'b1) ? 192'd0 : tmp_s_fu_308_p3);

assign sext_ln12_cast_fu_156_p1 = $signed(sext_ln12);

assign sext_ln13_fu_231_p1 = $signed(add_ln13_reg_370);

assign sext_ln14_fu_259_p1 = $signed(add_ln14_reg_375);

assign tmp_110_fu_298_p4 = {{phi_ln14_fu_84[191:64]}};

assign tmp_s_fu_308_p3 = {{empty_75}, {tmp_110_fu_298_p4}};

assign trunc_ln12_1_cast_cast_fu_152_p1 = $signed(trunc_ln12_1_cast);

assign trunc_ln12_fu_190_p1 = ap_sig_allocacmp_m_2[1:0];

assign zext_ln13_fu_204_p1 = lshr_ln_fu_194_p4;

endmodule //SABR_SABR_Pipeline_VITIS_LOOP_12_1
