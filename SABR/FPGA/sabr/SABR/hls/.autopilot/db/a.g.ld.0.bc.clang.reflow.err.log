remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.76 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.16.77 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.17 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.18 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.82 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.83 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.84 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.148 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.149 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.213 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.277 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.341 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.451 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.474 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.1011 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.1268 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.1300 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\build\hls_clib\win64\hlsmath_csyn_c\objs\src\c\powdouble.pp.cpp:0:0: __cxx_global_var_init.1556 not inlined into _GLOBAL__sub_I_powdouble.pp.cpp because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_isinf.h:17:21: fp_struct<double>::fp_struct(double) not inlined into int generic_isinf<double>(double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:17:21: fp_struct<double>::fp_struct(double) not inlined into int generic_isnan<double>(double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:496:17: fp_struct<double>::data() const not inlined into fp_struct<double>::to_double() const because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:510:16: fp_struct<double>::to_double() const not inlined into fp_struct<double>::to_ieee() const because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:196:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 4, 4, 71, 73>(ap_ufixed<71, -(4), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<73, -(((4) + (4)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:208:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 32, 6, 77, 72>(ap_ufixed<77, -(32), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<72, -(((32) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:198:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 7, 6, 73, 83>(ap_ufixed<73, -(7), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<83, -(((7) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:206:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 27, 6, 82, 77>(ap_ufixed<82, -(27), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<77, -(((27) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:200:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 12, 6, 83, 92>(ap_ufixed<83, -(12), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<92, -(((12) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:204:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 22, 6, 87, 82>(ap_ufixed<87, -(22), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<82, -(((22) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:202:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 17, 6, 92, 87>(ap_ufixed<92, -(17), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<87, -(((17) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:295:15: fp_struct<double>::fp_struct(double) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:659:16: fp_struct<double>::to_ieee() const not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:305:20: fp_struct<double>::expv() const not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:612:66: pow_reduce::pow_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:519:7: ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:344:10: int generic_isinf<double>(double) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:346:10: int generic_isnan<double>(double) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib\hlsmath\src\c\powdouble.cpp:7:12: double pow_reduce::pow_generic<double>(double, double) not inlined into pow because it should never be inlined (cost=never)
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:44:33: pow not inlined into SABR because it should never be inlined (cost=never)
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Unrolling loop 'VITIS_LOOP_28_2' (C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:28:22) in function 'SABR': changing partial unrolling into complete unrolling since the unrolling factor (=100) is no less than the loop trip count (=100).
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Unrolling loop 'VITIS_LOOP_28_2' (C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:28:22) in function 'SABR' completely with a factor of 100
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Unrolling loop 'VITIS_LOOP_21_1' (C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:21:22) in function 'SABR': changing partial unrolling into complete unrolling since the unrolling factor (=100) is no less than the loop trip count (=100).
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Unrolling loop 'VITIS_LOOP_21_1' (C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:21:22) in function 'SABR' completely with a factor of 100
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_isinf.h:17:21: fp_struct<double>::fp_struct(double) not inlined into int generic_isinf<double>(double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:17:21: fp_struct<double>::fp_struct(double) not inlined into int generic_isnan<double>(double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:496:17: fp_struct<double>::data() const (.103.113.123.156) not inlined into fp_struct<double>::to_double() const (.100.110.120.153) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:510:16: fp_struct<double>::to_double() const (.100.110.120.153) not inlined into fp_struct<double>::to_ieee() const because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:196:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 4, 4, 71, 73>(ap_ufixed<71, -(4), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<73, -(((4) + (4)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:198:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 7, 6, 73, 83>(ap_ufixed<73, -(7), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<83, -(((7) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:200:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 12, 6, 83, 92>(ap_ufixed<83, -(12), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<92, -(((12) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:202:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 17, 6, 92, 87>(ap_ufixed<92, -(17), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<87, -(((17) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:204:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 22, 6, 87, 82>(ap_ufixed<87, -(22), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<82, -(((22) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:206:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 27, 6, 82, 77>(ap_ufixed<82, -(27), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<77, -(((27) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:208:4: void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 32, 6, 77, 72>(ap_ufixed<77, -(32), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<72, -(((32) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:295:15: fp_struct<double>::fp_struct(double) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:305:20: fp_struct<double>::expv() const not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:344:10: int generic_isinf<double>(double) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:346:10: int generic_isnan<double>(double) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:383:15: fp_struct<double>::to_ieee() const not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:519:7: ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:612:66: pow_reduce::pow_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib\hlsmath\src\c\powdouble.cpp:7:12: double pow_reduce::pow_generic<double>(double, double) not inlined into pow because it should never be inlined (cost=never)
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:44:33: pow not inlined into SABR because it should never be inlined (cost=never)
remark: <unknown>:0:0: SABR not inlined into apatb_SABR_ir because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_isinf.h:16:0: Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isinf<double>(double)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:16:0: Inlining function 'fp_struct<double>::fp_struct(double)' into 'int generic_isnan<double>(double)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0: Inlining function 'fp_struct<double>::data() const (.103.113.123.156)' into 'fp_struct<double>::to_double() const (.100.110.120.153)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0: Inlining function 'fp_struct<double>::to_double() const (.100.110.120.153)' into 'fp_struct<double>::to_ieee() const'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:186:0: Inlining function 'void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 4, 4, 71, 73>(ap_ufixed<71, -(4), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<73, -(((4) + (4)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&)' into 'ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:186:0: Inlining function 'void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 7, 6, 73, 83>(ap_ufixed<73, -(7), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<83, -(((7) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&)' into 'ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:186:0: Inlining function 'void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 12, 6, 83, 92>(ap_ufixed<83, -(12), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<92, -(((12) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&)' into 'ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:186:0: Inlining function 'void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 17, 6, 92, 87>(ap_ufixed<92, -(17), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<87, -(((17) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&)' into 'ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:186:0: Inlining function 'void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 22, 6, 87, 82>(ap_ufixed<87, -(22), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<82, -(((22) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&)' into 'ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:186:0: Inlining function 'void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 27, 6, 82, 77>(ap_ufixed<82, -(27), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<77, -(((27) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&)' into 'ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:186:0: Inlining function 'void pow_reduce::log_range_reduce<ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>, 32, 6, 77, 72>(ap_ufixed<77, -(32), (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<72, -(((32) + (6)) - (1)), (ap_q_mode)5, (ap_o_mode)3, 0>&)' into 'ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:292:0: Inlining function 'fp_struct<double>::fp_struct(double)' into 'double pow_reduce::pow_generic<double>(double, double)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:292:0: Inlining function 'fp_struct<double>::expv() const' into 'double pow_reduce::pow_generic<double>(double, double)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:292:0: Inlining function 'int generic_isinf<double>(double)' into 'double pow_reduce::pow_generic<double>(double, double)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:292:0: Inlining function 'int generic_isnan<double>(double)' into 'double pow_reduce::pow_generic<double>(double, double)'
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:292:0: Inlining function 'pow_reduce::pow_traits<double>::exp_Z1P_m_1(ap_ufixed<51, -8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'double pow_reduce::pow_generic<double>(double, double)'
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Applying array_partition to 'S': Complete partitioning on dimension 1.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Applying array_partition to 'V': Complete partitioning on dimension 1.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Applying array_partition to 'random_increments': Block partitioning with factor 100 on dimension 1.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_01seqrandom_increments_0 gmem_0 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.load.12loadreadfor.inc48.load.17
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_110seqrandom_increments_1 gmem_1 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.1.load.13loadreadfor.inc48.1.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_211seqrandom_increments_2 gmem_2 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.2.load.13loadreadfor.inc48.2.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_312seqrandom_increments_3 gmem_3 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.3.load.13loadreadfor.inc48.3.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_413seqrandom_increments_4 gmem_4 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.4.load.13loadreadfor.inc48.4.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_514seqrandom_increments_5 gmem_5 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.5.load.13loadreadfor.inc48.5.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_615seqrandom_increments_6 gmem_6 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.6.load.13loadreadfor.inc48.6.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_716seqrandom_increments_7 gmem_7 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.7.load.13loadreadfor.inc48.7.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_817seqrandom_increments_8 gmem_8 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.8.load.13loadreadfor.inc48.8.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_918seqrandom_increments_9 gmem_9 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.9.load.13loadreadfor.inc48.9.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_1019seqrandom_increments_10 gmem_10 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.10.load.13loadreadfor.inc48.10.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_1120seqrandom_increments_11 gmem_11 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.11.load.13loadreadfor.inc48.11.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_1221seqrandom_increments_12 gmem_12 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.12.load.13loadreadfor.inc48.12.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_1322seqrandom_increments_13 gmem_13 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.13.load.13loadreadfor.inc48.13.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_1423seqrandom_increments_14 gmem_14 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.14.load.13loadreadfor.inc48.14.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_1524seqrandom_increments_15 gmem_15 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.15.load.13loadreadfor.inc48.15.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_1625seqrandom_increments_16 gmem_16 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.16.load.13loadreadfor.inc48.16.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_1726seqrandom_increments_17 gmem_17 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.17.load.13loadreadfor.inc48.17.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_1827seqrandom_increments_18 gmem_18 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.18.load.13loadreadfor.inc48.18.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_1928seqrandom_increments_19 gmem_19 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.19.load.13loadreadfor.inc48.19.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_2029seqrandom_increments_20 gmem_20 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.20.load.13loadreadfor.inc48.20.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_2130seqrandom_increments_21 gmem_21 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.21.load.13loadreadfor.inc48.21.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_2231seqrandom_increments_22 gmem_22 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.22.load.13loadreadfor.inc48.22.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_2332seqrandom_increments_23 gmem_23 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.23.load.13loadreadfor.inc48.23.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_2433seqrandom_increments_24 gmem_24 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.24.load.13loadreadfor.inc48.24.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_2534seqrandom_increments_25 gmem_25 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.25.load.13loadreadfor.inc48.25.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_2635seqrandom_increments_26 gmem_26 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.26.load.13loadreadfor.inc48.26.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_2736seqrandom_increments_27 gmem_27 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.27.load.13loadreadfor.inc48.27.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_2837seqrandom_increments_28 gmem_28 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.28.load.13loadreadfor.inc48.28.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_2938seqrandom_increments_29 gmem_29 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.29.load.13loadreadfor.inc48.29.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_3039seqrandom_increments_30 gmem_30 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.30.load.13loadreadfor.inc48.30.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_3140seqrandom_increments_31 gmem_31 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.31.load.13loadreadfor.inc48.31.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_3241seqrandom_increments_32 gmem_32 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.32.load.13loadreadfor.inc48.32.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_3342seqrandom_increments_33 gmem_33 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.33.load.13loadreadfor.inc48.33.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_3443seqrandom_increments_34 gmem_34 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.34.load.13loadreadfor.inc48.34.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_3544seqrandom_increments_35 gmem_35 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.35.load.13loadreadfor.inc48.35.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_3645seqrandom_increments_36 gmem_36 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.36.load.13loadreadfor.inc48.36.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_3746seqrandom_increments_37 gmem_37 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.37.load.13loadreadfor.inc48.37.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_3847seqrandom_increments_38 gmem_38 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.38.load.13loadreadfor.inc48.38.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_3948seqrandom_increments_39 gmem_39 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.39.load.13loadreadfor.inc48.39.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_4049seqrandom_increments_40 gmem_40 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.40.load.13loadreadfor.inc48.40.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_4150seqrandom_increments_41 gmem_41 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.41.load.13loadreadfor.inc48.41.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_4251seqrandom_increments_42 gmem_42 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.42.load.13loadreadfor.inc48.42.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_4352seqrandom_increments_43 gmem_43 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.43.load.13loadreadfor.inc48.43.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_4453seqrandom_increments_44 gmem_44 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.44.load.13loadreadfor.inc48.44.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_4554seqrandom_increments_45 gmem_45 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.45.load.13loadreadfor.inc48.45.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_4655seqrandom_increments_46 gmem_46 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.46.load.13loadreadfor.inc48.46.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_4756seqrandom_increments_47 gmem_47 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.47.load.13loadreadfor.inc48.47.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_4857seqrandom_increments_48 gmem_48 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.48.load.13loadreadfor.inc48.48.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_4958seqrandom_increments_49 gmem_49 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.49.load.13loadreadfor.inc48.49.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_5059seqrandom_increments_50 gmem_50 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.50.load.13loadreadfor.inc48.50.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_5160seqrandom_increments_51 gmem_51 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.51.load.13loadreadfor.inc48.51.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_5261seqrandom_increments_52 gmem_52 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.52.load.13loadreadfor.inc48.52.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_5362seqrandom_increments_53 gmem_53 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.53.load.13loadreadfor.inc48.53.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_5463seqrandom_increments_54 gmem_54 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.54.load.13loadreadfor.inc48.54.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_5564seqrandom_increments_55 gmem_55 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.55.load.13loadreadfor.inc48.55.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_5665seqrandom_increments_56 gmem_56 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.56.load.13loadreadfor.inc48.56.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_5766seqrandom_increments_57 gmem_57 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.57.load.13loadreadfor.inc48.57.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_5867seqrandom_increments_58 gmem_58 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.58.load.13loadreadfor.inc48.58.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_5968seqrandom_increments_59 gmem_59 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.59.load.13loadreadfor.inc48.59.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_6069seqrandom_increments_60 gmem_60 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.60.load.13loadreadfor.inc48.60.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_6170seqrandom_increments_61 gmem_61 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.61.load.13loadreadfor.inc48.61.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_6271seqrandom_increments_62 gmem_62 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.62.load.13loadreadfor.inc48.62.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_6372seqrandom_increments_63 gmem_63 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.63.load.13loadreadfor.inc48.63.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_6473seqrandom_increments_64 gmem_64 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.64.load.13loadreadfor.inc48.64.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_6574seqrandom_increments_65 gmem_65 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.65.load.13loadreadfor.inc48.65.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_6675seqrandom_increments_66 gmem_66 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.66.load.13loadreadfor.inc48.66.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_6776seqrandom_increments_67 gmem_67 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.67.load.13loadreadfor.inc48.67.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_6877seqrandom_increments_68 gmem_68 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.68.load.13loadreadfor.inc48.68.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_6978seqrandom_increments_69 gmem_69 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.69.load.13loadreadfor.inc48.69.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_7079seqrandom_increments_70 gmem_70 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.70.load.13loadreadfor.inc48.70.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_7180seqrandom_increments_71 gmem_71 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.71.load.13loadreadfor.inc48.71.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_7281seqrandom_increments_72 gmem_72 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.72.load.13loadreadfor.inc48.72.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_7382seqrandom_increments_73 gmem_73 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.73.load.13loadreadfor.inc48.73.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_7483seqrandom_increments_74 gmem_74 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.74.load.13loadreadfor.inc48.74.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_7584seqrandom_increments_75 gmem_75 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.75.load.13loadreadfor.inc48.75.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_7685seqrandom_increments_76 gmem_76 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.76.load.13loadreadfor.inc48.76.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_7786seqrandom_increments_77 gmem_77 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.77.load.13loadreadfor.inc48.77.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_7887seqrandom_increments_78 gmem_78 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.78.load.13loadreadfor.inc48.78.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_7988seqrandom_increments_79 gmem_79 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.79.load.13loadreadfor.inc48.79.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_8089seqrandom_increments_80 gmem_80 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.80.load.13loadreadfor.inc48.80.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_8190seqrandom_increments_81 gmem_81 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.81.load.13loadreadfor.inc48.81.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_8291seqrandom_increments_82 gmem_82 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.82.load.13loadreadfor.inc48.82.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_8392seqrandom_increments_83 gmem_83 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.83.load.13loadreadfor.inc48.83.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_8493seqrandom_increments_84 gmem_84 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.84.load.13loadreadfor.inc48.84.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_8594seqrandom_increments_85 gmem_85 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.85.load.13loadreadfor.inc48.85.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_8695seqrandom_increments_86 gmem_86 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.86.load.13loadreadfor.inc48.86.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_8796seqrandom_increments_87 gmem_87 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.87.load.13loadreadfor.inc48.87.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_8897seqrandom_increments_88 gmem_88 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.88.load.13loadreadfor.inc48.88.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_8998seqrandom_increments_89 gmem_89 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.89.load.13loadreadfor.inc48.89.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_9099seqrandom_increments_90 gmem_90 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.90.load.13loadreadfor.inc48.90.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_91100seqrandom_increments_91 gmem_91 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.91.load.13loadreadfor.inc48.91.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_92101seqrandom_increments_92 gmem_92 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.92.load.13loadreadfor.inc48.92.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_93102seqrandom_increments_93 gmem_93 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.93.load.13loadreadfor.inc48.93.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_94103seqrandom_increments_94 gmem_94 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.94.load.13loadreadfor.inc48.94.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_95104seqrandom_increments_95 gmem_95 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.95.load.13loadreadfor.inc48.95.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_96105seqrandom_increments_96 gmem_96 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.96.load.13loadreadfor.inc48.96.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_97106seqrandom_increments_97 gmem_97 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.97.load.13loadreadfor.inc48.97.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_98107seqrandom_increments_98 gmem_98 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.98.load.13loadreadfor.inc48.98.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of length 98 has been inferred _XLX_SEP_ random_increments_99108seqrandom_increments_99 gmem_99 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR  _XLX_SEP_ loadreadfor.inc48.99.load.13loadreadfor.inc48.99.load.18
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_99108seq _XLX_SEP_ wseqrandom_increments_99 gmem_99 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_98107seq _XLX_SEP_ wseq109random_increments_98 gmem_98 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_97106seq _XLX_SEP_ wseq110random_increments_97 gmem_97 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_96105seq _XLX_SEP_ wseq111random_increments_96 gmem_96 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_95104seq _XLX_SEP_ wseq112random_increments_95 gmem_95 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_94103seq _XLX_SEP_ wseq113random_increments_94 gmem_94 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_93102seq _XLX_SEP_ wseq114random_increments_93 gmem_93 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_92101seq _XLX_SEP_ wseq115random_increments_92 gmem_92 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_91100seq _XLX_SEP_ wseq116random_increments_91 gmem_91 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_9099seq _XLX_SEP_ wseq117random_increments_90 gmem_90 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_8998seq _XLX_SEP_ wseq118random_increments_89 gmem_89 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_8897seq _XLX_SEP_ wseq119random_increments_88 gmem_88 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_8796seq _XLX_SEP_ wseq120random_increments_87 gmem_87 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_8695seq _XLX_SEP_ wseq121random_increments_86 gmem_86 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_8594seq _XLX_SEP_ wseq122random_increments_85 gmem_85 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_8493seq _XLX_SEP_ wseq123random_increments_84 gmem_84 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_8392seq _XLX_SEP_ wseq124random_increments_83 gmem_83 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_8291seq _XLX_SEP_ wseq125random_increments_82 gmem_82 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_8190seq _XLX_SEP_ wseq126random_increments_81 gmem_81 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_8089seq _XLX_SEP_ wseq127random_increments_80 gmem_80 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_7988seq _XLX_SEP_ wseq128random_increments_79 gmem_79 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_7887seq _XLX_SEP_ wseq129random_increments_78 gmem_78 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_7786seq _XLX_SEP_ wseq130random_increments_77 gmem_77 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_7685seq _XLX_SEP_ wseq131random_increments_76 gmem_76 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_7584seq _XLX_SEP_ wseq132random_increments_75 gmem_75 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_7483seq _XLX_SEP_ wseq133random_increments_74 gmem_74 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_7382seq _XLX_SEP_ wseq134random_increments_73 gmem_73 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_7281seq _XLX_SEP_ wseq135random_increments_72 gmem_72 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_7180seq _XLX_SEP_ wseq136random_increments_71 gmem_71 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_7079seq _XLX_SEP_ wseq137random_increments_70 gmem_70 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_6978seq _XLX_SEP_ wseq138random_increments_69 gmem_69 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_6877seq _XLX_SEP_ wseq139random_increments_68 gmem_68 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_6776seq _XLX_SEP_ wseq140random_increments_67 gmem_67 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_6675seq _XLX_SEP_ wseq141random_increments_66 gmem_66 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_6574seq _XLX_SEP_ wseq142random_increments_65 gmem_65 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_6473seq _XLX_SEP_ wseq143random_increments_64 gmem_64 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_6372seq _XLX_SEP_ wseq144random_increments_63 gmem_63 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_6271seq _XLX_SEP_ wseq145random_increments_62 gmem_62 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_6170seq _XLX_SEP_ wseq146random_increments_61 gmem_61 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_6069seq _XLX_SEP_ wseq147random_increments_60 gmem_60 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_5968seq _XLX_SEP_ wseq148random_increments_59 gmem_59 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_5867seq _XLX_SEP_ wseq149random_increments_58 gmem_58 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_5766seq _XLX_SEP_ wseq150random_increments_57 gmem_57 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_5665seq _XLX_SEP_ wseq151random_increments_56 gmem_56 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_5564seq _XLX_SEP_ wseq152random_increments_55 gmem_55 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_5463seq _XLX_SEP_ wseq153random_increments_54 gmem_54 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_5362seq _XLX_SEP_ wseq154random_increments_53 gmem_53 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_5261seq _XLX_SEP_ wseq155random_increments_52 gmem_52 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_5160seq _XLX_SEP_ wseq156random_increments_51 gmem_51 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_5059seq _XLX_SEP_ wseq157random_increments_50 gmem_50 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_4958seq _XLX_SEP_ wseq158random_increments_49 gmem_49 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_4857seq _XLX_SEP_ wseq159random_increments_48 gmem_48 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_4756seq _XLX_SEP_ wseq160random_increments_47 gmem_47 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_4655seq _XLX_SEP_ wseq161random_increments_46 gmem_46 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_4554seq _XLX_SEP_ wseq162random_increments_45 gmem_45 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_4453seq _XLX_SEP_ wseq163random_increments_44 gmem_44 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_4352seq _XLX_SEP_ wseq164random_increments_43 gmem_43 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_4251seq _XLX_SEP_ wseq165random_increments_42 gmem_42 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_4150seq _XLX_SEP_ wseq166random_increments_41 gmem_41 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_4049seq _XLX_SEP_ wseq167random_increments_40 gmem_40 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_3948seq _XLX_SEP_ wseq168random_increments_39 gmem_39 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_3847seq _XLX_SEP_ wseq169random_increments_38 gmem_38 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_3746seq _XLX_SEP_ wseq170random_increments_37 gmem_37 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_3645seq _XLX_SEP_ wseq171random_increments_36 gmem_36 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_3544seq _XLX_SEP_ wseq172random_increments_35 gmem_35 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_3443seq _XLX_SEP_ wseq173random_increments_34 gmem_34 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_3342seq _XLX_SEP_ wseq174random_increments_33 gmem_33 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_3241seq _XLX_SEP_ wseq175random_increments_32 gmem_32 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_3140seq _XLX_SEP_ wseq176random_increments_31 gmem_31 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_3039seq _XLX_SEP_ wseq177random_increments_30 gmem_30 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_2938seq _XLX_SEP_ wseq178random_increments_29 gmem_29 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_2837seq _XLX_SEP_ wseq179random_increments_28 gmem_28 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_2736seq _XLX_SEP_ wseq180random_increments_27 gmem_27 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_2635seq _XLX_SEP_ wseq181random_increments_26 gmem_26 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_2534seq _XLX_SEP_ wseq182random_increments_25 gmem_25 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_2433seq _XLX_SEP_ wseq183random_increments_24 gmem_24 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_2332seq _XLX_SEP_ wseq184random_increments_23 gmem_23 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_2231seq _XLX_SEP_ wseq185random_increments_22 gmem_22 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_2130seq _XLX_SEP_ wseq186random_increments_21 gmem_21 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_2029seq _XLX_SEP_ wseq187random_increments_20 gmem_20 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_1928seq _XLX_SEP_ wseq188random_increments_19 gmem_19 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_1827seq _XLX_SEP_ wseq189random_increments_18 gmem_18 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_1726seq _XLX_SEP_ wseq190random_increments_17 gmem_17 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_1625seq _XLX_SEP_ wseq191random_increments_16 gmem_16 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_1524seq _XLX_SEP_ wseq192random_increments_15 gmem_15 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_1423seq _XLX_SEP_ wseq193random_increments_14 gmem_14 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_1322seq _XLX_SEP_ wseq194random_increments_13 gmem_13 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_1221seq _XLX_SEP_ wseq195random_increments_12 gmem_12 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_1120seq _XLX_SEP_ wseq196random_increments_11 gmem_11 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_1019seq _XLX_SEP_ wseq197random_increments_10 gmem_10 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_918seq _XLX_SEP_ wseq198random_increments_9 gmem_9 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_817seq _XLX_SEP_ wseq199random_increments_8 gmem_8 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_716seq _XLX_SEP_ wseq200random_increments_7 gmem_7 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_615seq _XLX_SEP_ wseq201random_increments_6 gmem_6 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_514seq _XLX_SEP_ wseq202random_increments_5 gmem_5 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_413seq _XLX_SEP_ wseq203random_increments_4 gmem_4 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_312seq _XLX_SEP_ wseq204random_increments_3 gmem_3 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_211seq _XLX_SEP_ wseq205random_increments_2 gmem_2 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_110seq _XLX_SEP_ wseq206random_increments_1 gmem_1 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential read of 98 x 64bit words has been widened by 2: 49 x 128bit words _XLX_SEP_ callreadrandom_increments_01seq _XLX_SEP_ wseq207random_increments_0 gmem_0 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseqrandom_increments_99 gmem_99 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq109random_increments_98 gmem_98 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq110random_increments_97 gmem_97 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq111random_increments_96 gmem_96 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq112random_increments_95 gmem_95 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq113random_increments_94 gmem_94 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq114random_increments_93 gmem_93 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq115random_increments_92 gmem_92 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq116random_increments_91 gmem_91 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq117random_increments_90 gmem_90 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq118random_increments_89 gmem_89 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq119random_increments_88 gmem_88 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq120random_increments_87 gmem_87 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq121random_increments_86 gmem_86 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq122random_increments_85 gmem_85 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq123random_increments_84 gmem_84 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq124random_increments_83 gmem_83 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq125random_increments_82 gmem_82 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq126random_increments_81 gmem_81 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq127random_increments_80 gmem_80 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq128random_increments_79 gmem_79 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq129random_increments_78 gmem_78 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq130random_increments_77 gmem_77 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq131random_increments_76 gmem_76 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq132random_increments_75 gmem_75 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq133random_increments_74 gmem_74 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq134random_increments_73 gmem_73 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq135random_increments_72 gmem_72 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq136random_increments_71 gmem_71 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq137random_increments_70 gmem_70 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq138random_increments_69 gmem_69 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq139random_increments_68 gmem_68 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq140random_increments_67 gmem_67 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq141random_increments_66 gmem_66 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq142random_increments_65 gmem_65 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq143random_increments_64 gmem_64 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq144random_increments_63 gmem_63 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq145random_increments_62 gmem_62 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq146random_increments_61 gmem_61 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq147random_increments_60 gmem_60 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq148random_increments_59 gmem_59 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq149random_increments_58 gmem_58 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq150random_increments_57 gmem_57 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq151random_increments_56 gmem_56 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq152random_increments_55 gmem_55 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq153random_increments_54 gmem_54 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq154random_increments_53 gmem_53 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq155random_increments_52 gmem_52 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq156random_increments_51 gmem_51 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq157random_increments_50 gmem_50 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq158random_increments_49 gmem_49 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq159random_increments_48 gmem_48 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq160random_increments_47 gmem_47 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq161random_increments_46 gmem_46 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq162random_increments_45 gmem_45 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq163random_increments_44 gmem_44 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq164random_increments_43 gmem_43 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq165random_increments_42 gmem_42 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq166random_increments_41 gmem_41 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq167random_increments_40 gmem_40 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq168random_increments_39 gmem_39 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq169random_increments_38 gmem_38 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq170random_increments_37 gmem_37 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq171random_increments_36 gmem_36 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq172random_increments_35 gmem_35 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq173random_increments_34 gmem_34 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq174random_increments_33 gmem_33 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq175random_increments_32 gmem_32 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq176random_increments_31 gmem_31 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq177random_increments_30 gmem_30 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq178random_increments_29 gmem_29 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq179random_increments_28 gmem_28 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq180random_increments_27 gmem_27 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq181random_increments_26 gmem_26 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq182random_increments_25 gmem_25 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq183random_increments_24 gmem_24 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq184random_increments_23 gmem_23 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq185random_increments_22 gmem_22 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq186random_increments_21 gmem_21 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq187random_increments_20 gmem_20 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq188random_increments_19 gmem_19 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq189random_increments_18 gmem_18 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq190random_increments_17 gmem_17 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq191random_increments_16 gmem_16 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq192random_increments_15 gmem_15 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq193random_increments_14 gmem_14 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq194random_increments_13 gmem_13 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq195random_increments_12 gmem_12 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq196random_increments_11 gmem_11 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq197random_increments_10 gmem_10 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq198random_increments_9 gmem_9 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq199random_increments_8 gmem_8 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq200random_increments_7 gmem_7 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq201random_increments_6 gmem_6 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq202random_increments_5 gmem_5 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq203random_increments_4 gmem_4 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq204random_increments_3 gmem_3 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq205random_increments_2 gmem_2 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq206random_increments_1 gmem_1 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Sequential access length is not divisible by 2 _XLX_SEP_ callreadwseq207random_increments_0 gmem_0 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_99' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_98' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_97' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_96' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_95' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_94' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_93' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_92' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_91' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_90' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_89' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_88' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_87' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_86' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_85' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_84' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_83' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_82' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_81' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_80' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_79' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_78' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_77' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_76' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_75' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_74' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_73' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_72' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_71' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_70' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_69' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_68' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_67' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_66' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_65' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_64' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_63' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_62' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_61' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_60' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_59' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_58' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_57' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_56' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_55' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_54' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_53' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_52' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_51' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_50' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_49' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_48' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_47' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_46' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_45' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_44' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_43' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_42' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_41' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_40' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_39' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_38' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_37' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_36' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_35' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_34' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_33' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_32' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_31' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_30' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_29' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_28' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_27' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_26' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_25' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_24' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_23' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_22' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_21' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_20' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_19' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_18' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_17' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_16' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_15' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_14' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_13' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_12' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_11' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_10' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_9' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_8' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_7' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_6' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_5' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_4' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_3' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_2' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_1' since this interface mode only supports scalar types
warning: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:4:0: Cannot apply interface mode 'ap_none' on function argument 'random_increments_0' since this interface mode only supports scalar types
DICompileUnit not listed in llvm.dbg.cu
!328 = distinct !DICompileUnit(language: DW_LANG_C99, file: !329, producer: "clang version 7.0.0 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4)
warning: ignoring invalid debug info in C:/Users/steve/thesis-monte-carlo/SABR/FPGA/sabr/SABR/hls/.autopilot/db\apatb_SABR_ir.bc
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq gmem_0 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq1 gmem_1 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_1'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq2 gmem_2 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_2'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq3 gmem_3 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_3'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq4 gmem_4 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_4'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq5 gmem_5 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_5'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq6 gmem_6 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_6'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq7 gmem_7 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_7'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq8 gmem_8 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_8'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq9 gmem_9 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_9'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq10 gmem_10 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_10'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq11 gmem_11 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_11'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq12 gmem_12 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_12'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq13 gmem_13 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_13'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq14 gmem_14 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_14'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq15 gmem_15 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_15'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq16 gmem_16 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_16'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq17 gmem_17 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_17'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq18 gmem_18 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_18'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq19 gmem_19 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_19'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq20 gmem_20 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_20'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq21 gmem_21 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_21'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq22 gmem_22 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_22'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq23 gmem_23 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_23'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq24 gmem_24 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_24'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq25 gmem_25 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_25'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq26 gmem_26 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_26'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq27 gmem_27 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_27'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq28 gmem_28 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_28'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq29 gmem_29 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_29'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq30 gmem_30 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_30'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq31 gmem_31 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_31'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq32 gmem_32 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_32'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq33 gmem_33 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_33'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq34 gmem_34 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_34'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq35 gmem_35 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_35'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq36 gmem_36 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_36'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq37 gmem_37 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_37'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq38 gmem_38 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_38'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq39 gmem_39 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_39'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq40 gmem_40 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_40'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq41 gmem_41 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_41'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq42 gmem_42 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_42'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq43 gmem_43 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_43'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq44 gmem_44 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_44'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq45 gmem_45 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_45'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq46 gmem_46 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_46'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq47 gmem_47 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_47'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq48 gmem_48 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_48'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq49 gmem_49 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_49'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq50 gmem_50 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_50'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq51 gmem_51 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_51'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq52 gmem_52 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_52'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq53 gmem_53 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_53'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq54 gmem_54 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_54'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq55 gmem_55 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_55'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq56 gmem_56 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_56'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq57 gmem_57 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_57'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq58 gmem_58 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_58'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq59 gmem_59 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_59'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq60 gmem_60 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_60'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq61 gmem_61 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_61'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq62 gmem_62 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_62'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq63 gmem_63 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_63'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq64 gmem_64 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_64'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq65 gmem_65 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_65'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq66 gmem_66 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_66'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq67 gmem_67 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_67'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq68 gmem_68 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_68'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq69 gmem_69 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_69'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq70 gmem_70 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_70'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq71 gmem_71 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_71'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq72 gmem_72 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_72'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq73 gmem_73 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_73'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq74 gmem_74 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_74'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq75 gmem_75 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_75'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq76 gmem_76 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_76'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq77 gmem_77 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_77'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq78 gmem_78 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_78'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq79 gmem_79 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_79'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq80 gmem_80 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_80'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq81 gmem_81 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_81'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq82 gmem_82 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_82'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq83 gmem_83 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_83'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq84 gmem_84 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_84'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq85 gmem_85 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_85'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq86 gmem_86 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_86'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq87 gmem_87 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_87'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq88 gmem_88 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_88'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq89 gmem_89 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_89'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq90 gmem_90 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_90'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq91 gmem_91 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_91'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq92 gmem_92 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_92'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq93 gmem_93 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_93'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq94 gmem_94 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_94'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq95 gmem_95 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_95'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq96 gmem_96 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_96'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq97 gmem_97 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_97'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq98 gmem_98 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_98'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq99 gmem_99 VITIS_LOOP_31_3 C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19 SABR 
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19: Multiple burst reads of length 49 and bit width 128 in loop 'VITIS_LOOP_31_3'(C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:31:19) has been inferred on bundle 'gmem_99'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:383:15: fp_struct<double>::to_ieee() const not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_pow.h:519:7: ap_ufixed<72, -37, (ap_q_mode)5, (ap_o_mode)3, 0> pow_reduce::pow_traits<double>::log_range_reduction<71>(ap_ufixed<71, -4, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<121, 12, (ap_q_mode)5, (ap_o_mode)3, 0>&) not inlined into double pow_reduce::pow_generic<double>(double, double) because it should never be inlined (cost=never)
remark: C:\scratch\2024.2\hls_product\495\2024.2\src\shared\hls\clib\hlsmath\src\c\powdouble.cpp:7:12: double pow_reduce::pow_generic<double>(double, double) not inlined into pow because it should never be inlined (cost=never)
remark: C:/Users/steve/thesis-monte-carlo/SABR/test_optimized.c:44:33: pow not inlined into SABR because it should never be inlined (cost=never)
===-------------------------------------------------------------------------===
                         Miscellaneous Ungrouped Timers
===-------------------------------------------------------------------------===

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   2.0156 (100.0%)   0.1406 (100.0%)   2.1563 (100.0%)   2.2726 (100.0%)  Code Generation Time
   2.0156 (100.0%)   0.1406 (100.0%)   2.1563 (100.0%)   2.2726 (100.0%)  Total

===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 2.1719 seconds (2.2577 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0938 (  4.6%)   0.0156 ( 11.1%)   0.1094 (  5.0%)   0.1243 (  5.5%)  Inliner for always_inline functions
   0.0625 (  3.1%)   0.0156 ( 11.1%)   0.0781 (  3.6%)   0.0764 (  3.4%)  Generate HLS compatible IR
   0.0625 (  3.1%)   0.0000 (  0.0%)   0.0625 (  2.9%)   0.0580 (  2.6%)  Build loop flatten cost model
   0.0625 (  3.1%)   0.0000 (  0.0%)   0.0625 (  2.9%)   0.0505 (  2.2%)  ArrayPartition - Partition Arrays into Banks
   0.0469 (  2.3%)   0.0000 (  0.0%)   0.0469 (  2.2%)   0.0430 (  1.9%)  Auto automatic array partition analysis
   0.0313 (  1.5%)   0.0156 ( 11.1%)   0.0469 (  2.2%)   0.0397 (  1.8%)  WidenBurst - Widen bursts
   0.0469 (  2.3%)   0.0000 (  0.0%)   0.0469 (  2.2%)   0.0363 (  1.6%)  PredicateAnalyzer - Predidate Analysis
   0.0313 (  1.5%)   0.0000 (  0.0%)   0.0313 (  1.4%)   0.0334 (  1.5%)  ReflowCheckPragmaConflicts - check pragma conflicts in reflow
   0.0313 (  1.5%)   0.0000 (  0.0%)   0.0313 (  1.4%)   0.0295 (  1.3%)  Deduce function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0267 (  1.2%)  Lower HLS related loops
   0.0469 (  2.3%)   0.0000 (  0.0%)   0.0469 (  2.2%)   0.0247 (  1.1%)  Global Value Numbering
   0.0313 (  1.5%)   0.0000 (  0.0%)   0.0313 (  1.4%)   0.0234 (  1.0%)  Induction Variable Simplification
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0232 (  1.0%)  SeqAccessesInference - Infer Sequential accesses for HLS C/C++
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0224 (  1.0%)  Detach IR Wrapper
   0.0313 (  1.5%)   0.0000 (  0.0%)   0.0313 (  1.4%)   0.0216 (  1.0%)  Lower intermediate type generated by HLSGen
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0203 (  0.9%)  ProduceBurstMessages - Produce Burst Messages
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0195 (  0.9%)  Merge accesses
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0192 (  0.9%)  AlignMemory - Align memory accesses
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0184 (  0.8%)  Dump HBM driver helper code
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0183 (  0.8%)  Memory Summary
   0.0313 (  1.5%)   0.0000 (  0.0%)   0.0313 (  1.4%)   0.0182 (  0.8%)  Combine redundant instructions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0179 (  0.8%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0168 (  0.7%)  MemSSAOpt - Memory SSA based optimizations
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0160 (  0.7%)  AlignMemory - Align memory accesses
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0157 (  0.7%)  Automatic inliner in reflow
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0157 (  0.7%)  Induction Variable Simplification
   0.0313 (  1.5%)   0.0000 (  0.0%)   0.0313 (  1.4%)   0.0152 (  0.7%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0152 (  0.7%)  Global Value Numbering
   0.0000 (  0.0%)   0.0156 ( 11.1%)   0.0156 (  0.7%)   0.0147 (  0.7%)  Automatic array partition transformation
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0146 (  0.6%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0144 (  0.6%)  Memory Summary
   0.0156 (  0.8%)   0.0156 ( 11.1%)   0.0313 (  1.4%)   0.0142 (  0.6%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0136 (  0.6%)  AlignMemory - Align memory accesses
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0131 (  0.6%)  Object Decomposition
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0129 (  0.6%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0128 (  0.6%)  Analyze sequential accesses
   0.0313 (  1.5%)   0.0000 (  0.0%)   0.0313 (  1.4%)   0.0126 (  0.6%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0124 (  0.6%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0124 (  0.5%)  Auto automatic array partition analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0119 (  0.5%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0118 (  0.5%)  Global Variable Optimizer
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0118 (  0.5%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0118 (  0.5%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0116 (  0.5%)  Evaluate _ssdm_string2bits
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0109 (  0.5%)  Auto automatic array partition analysis
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0109 (  0.5%)  Auto automatic array partition analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0108 (  0.5%)  Interprocedural Sparse Conditional Constant Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0087 (  0.4%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0087 (  0.4%)  Bitcode for HLS
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0084 (  0.4%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0084 (  0.4%)  Print module to file
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0083 (  0.4%)  InterfaceCheck - Check Interface
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0075 (  0.3%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0071 (  0.3%)  Function Alias Analysis Results
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0071 (  0.3%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0071 (  0.3%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0070 (  0.3%)  Combine redundant instructions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0070 (  0.3%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0069 (  0.3%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0069 (  0.3%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0069 (  0.3%)  Undecay arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0068 (  0.3%)  dump pragma info via xml format
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0068 (  0.3%)  Merge accesses
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0068 (  0.3%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0067 (  0.3%)  Global Value Numbering
   0.0313 (  1.5%)   0.0000 (  0.0%)   0.0313 (  1.4%)   0.0067 (  0.3%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0066 (  0.3%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0065 (  0.3%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0065 (  0.3%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0064 (  0.3%)  Value Propagation
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0064 (  0.3%)  Produce message if basic block has too many instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0063 (  0.3%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0063 (  0.3%)  Interprocedural Sparse Conditional Constant Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0062 (  0.3%)  ROM inference pass
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0061 (  0.3%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0060 (  0.3%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0060 (  0.3%)  Generate IR Wrapper
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0060 (  0.3%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0059 (  0.3%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0058 (  0.3%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0056 (  0.2%)  Induction Variable Simplification
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0056 (  0.2%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0054 (  0.2%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0053 (  0.2%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0053 (  0.2%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0053 (  0.2%)  Value Propagation
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0053 (  0.2%)  Induction Variable Simplification
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0052 (  0.2%)  Value Propagation
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0051 (  0.2%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0051 (  0.2%)  Dead Store Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0050 (  0.2%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0050 (  0.2%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0050 (  0.2%)  AccessGroup - Group the memory access for the same object
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0050 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0050 (  0.2%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0050 (  0.2%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0050 (  0.2%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.2%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.2%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.2%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.2%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0049 (  0.2%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0048 (  0.2%)  Value Propagation
   0.0000 (  0.0%)   0.0156 ( 11.1%)   0.0156 (  0.7%)   0.0048 (  0.2%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0047 (  0.2%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0047 (  0.2%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0047 (  0.2%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0046 (  0.2%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.2%)  Deduce function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0044 (  0.2%)  Interprocedural Sparse Conditional Constant Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.2%)  Dead Store Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0042 (  0.2%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0041 (  0.2%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0041 (  0.2%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0041 (  0.2%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.2%)  Lower HLS related attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.2%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.2%)  Dead Store Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0040 (  0.2%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.2%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.2%)  Early GVN Hoisting of Expressions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0039 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.2%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.2%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0038 (  0.2%)  Dead Store Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0038 (  0.2%)  Merge accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0038 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0038 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0038 (  0.2%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0038 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0038 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0156 ( 11.1%)   0.0156 (  0.7%)   0.0038 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0038 (  0.2%)  Synthesis checker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0037 (  0.2%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0037 (  0.2%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0037 (  0.2%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.2%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.2%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.2%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.2%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.2%)  Global Value Numbering
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0034 (  0.2%)  Recursively inline barriers caller to kernel
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.2%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.1%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.1%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.1%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.1%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0032 (  0.1%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.1%)   automatic function inline driven by performance to break up circuit dependence
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.1%)  Loop Load Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0030 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.1%)  Dead Store Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0029 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.1%)  Produce message if basic block has too many instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.1%)  Early GVN Hoisting of Expressions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0028 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.1%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.1%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.1%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.1%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.1%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0027 (  0.1%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.1%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.1%)  Combine redundant instructions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0027 (  0.1%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.1%)  Dead Store Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0026 (  0.1%)  Infer PPPO for array-to-streams
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0026 (  0.1%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0026 (  0.1%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0026 (  0.1%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0026 (  0.1%)  Automatic data reuse optimization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.1%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.1%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.1%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.1%)  Synthesis checker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.1%)  Deduce function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.1%)  Promote Memory to Register
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0022 (  0.1%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.1%)  LegacyShiftRegisterRecognize - Recognize shift registers and memory
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.1%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.1%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.1%)  InferXCLAttributes - Infer XCL attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.1%)  Combine redundant instructions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0019 (  0.1%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.1%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.1%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.1%)  Internalize Global Symbols
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.1%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.1%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.1%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0018 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.1%)  Memory Summary
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0017 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.1%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.1%)  Simple constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.1%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.1%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Aggressive Dead Code Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0016 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Lower printf for the fpga target
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Memory SSA
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0016 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.1%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Pragma preprocessing after clang
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Memory Summary
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.1%)  clean some traps produced by clang
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0014 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.1%)  Straight line strength reduction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.1%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Special handling of axis with side-channels
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Merge accesses
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0013 (  0.1%)  Reflow pipeline loop automatically
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Infer nuw/nsw flags for instructions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0013 (  0.1%)  Infer PPPO for array-to-streams
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0013 (  0.1%)  DefaultInterfaceBuilderNew - Build Default Top Interface
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Aggressive Dead Code Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0012 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Merge accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Simple constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.1%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.1%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.1%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.1%)  Lower black box
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.1%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.1%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.1%)  Memory Summary
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Memory SSA
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0011 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0010 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Automatically infer occurrence information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Deduce function attributes
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0010 (  0.0%)  Loop Invariant Code Motion
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  InterfaceEncodingChange - Change Interface Encoding format
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Memory SSA
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0009 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Function duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Jump Threading
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Pragma preprocessing after clang
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Inliner for always_inline functions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Change xcl attribute to call sideeffect
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  do loop unroll according tripcount threshold config
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Interleave memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Simple constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Disaggregation preprocessing
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Optimize multiple instructions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0007 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  ROM inference pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0006 (  0.0%)  Object Decomposition
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  RemoveConflictingBurst - Remove port conflicting bursts
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Extract dataflow loop
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dead Store Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0005 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Jump Threading
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  InferXCLAttrImplications - Infer XCL attribute implications
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Structure stription
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Localize variables
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Resolve full load/store
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Localize variables
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Extract cfgs in dataflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  LegalizeName - Check interface name in terms of HDL syntax
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Localize variables
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  AutoDepPragmaInfer - Auto Dependence Pragma Infer
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Jump Threading
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  ReflowCheckVarPragmaConflicts - check variable pragma conflicts in reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Promote 'by reference' arguments to scalars
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Inline sub function calls recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Global Variable Optimizer
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0003 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dataflow Process Duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lower BINDOP scope bundle
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0156 ( 11.1%)   0.0156 (  0.7%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Resolve full load/store
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Merge accesses in the same region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lower directive scopes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Disaggregation preprocessing
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Merge accesses in the same region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  LegacyShiftRegisterRecognize - Recognize shift registers and memory
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Reduce the height of tree
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  AutoDepPragmaInfer - Auto Dependence Pragma Infer
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   automatic parallel and pipeline insertion based performance constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lower tasks into dataflow form
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer set function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Merge accesses in the same region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Normalize condition on switch-cases and muxes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Reduce the height of tree
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  demangle Name to normal Name
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LowerPredicate - Lower predicates to control-flow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0156 ( 11.1%)   0.0156 (  0.7%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  AttrPropagation - Propagate Pointer Parameter Attribute
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Struct object aggregation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0156 (  0.8%)   0.0000 (  0.0%)   0.0156 (  0.7%)   0.0001 (  0.0%)  Resolve full load/store
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Reflow auto unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Normalize condition on switch-cases and muxes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  verify cache pragmas
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Undecay arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  AccessGroup - Group the memory access for the same object
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  SimplifyPredicate - Simplify predicate
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Stream object marker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LowerPredicate - Lower predicates to control-flow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lower fence group
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection for FIFO
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalarize vector operations
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop Access Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  SimplifyPredicate - Simplify predicate
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ShiftRegInference - Automatic Shift Register Inference
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Generate Loops to iterate over workitems
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Transform SSA value on top function to variable with pointer type
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer loop trip count
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  DeSPMD - Insert barriers into uniform loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Normalize loop index
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ArrayReshape - Reshape Arrays into Wider Arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ShiftRegInference - Automatic Shift Register Inference
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Unswitch loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  top function attribute attaching
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Preprocessing before loop rotation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer workgroup size for opencl Kernel
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  normalize array partition result to reduce redundant sub array arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower llvm.assume to _ssdm_AssertFail
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Unify function exit nodes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  dataflow canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Build Synchronization Regions in SPMD program
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Array Access Range Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Assumption Cache Tracker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Expand private memory for each workitem in SPMD program
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ArrayPartition - Partition Arrays into Banks
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate SPIR Kernels
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Extract occurrence region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Shrink Synchronization Regions in SPMD program to reduce CFG complexity
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Entirety access check on array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SPIRUpdateIntrRange - Update SPIR Intrinsics Metadata
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Structure Decomposition
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Vectorize the SPMD regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Outline pipeline stages
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Analyze occurrence information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Performance Evaluation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delinearization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Struct object aggregation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SPIRUpdateIntrRange - Update SPIR Intrinsics Metadata
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower memory intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Aggressive dead store elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate guard varible
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate guard varible
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Collect basic metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Entirety access check on array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Library Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Profile summary info
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Transform Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   2.0313 (100.0%)   0.1406 (100.0%)   2.1719 (100.0%)   2.2577 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0469 seconds (0.0561 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0313 (100.0%)   0.0156 (100.0%)   0.0469 (100.0%)   0.0561 (100.0%)  Parse IR
   0.0313 (100.0%)   0.0156 (100.0%)   0.0469 (100.0%)   0.0561 (100.0%)  Total

===-------------------------------------------------------------------------===
                          Clang front-end time report
===-------------------------------------------------------------------------===
  Total Execution Time: 2.2031 seconds (2.3128 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   2.0469 (100.0%)   0.1563 (100.0%)   2.2031 (100.0%)   2.3128 (100.0%)  Clang front-end timer
   2.0469 (100.0%)   0.1563 (100.0%)   2.2031 (100.0%)   2.3128 (100.0%)  Total

